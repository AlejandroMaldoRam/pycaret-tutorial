2023-11-17 06:45:11,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 06:45:11,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 06:45:11,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 06:45:11,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 06:51:21,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 06:51:21,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 06:51:21,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 06:51:21,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 06:53:48,981:INFO:PyCaret ClassificationExperiment
2023-11-17 06:53:48,981:INFO:Logging name: clf-default-name
2023-11-17 06:53:48,981:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 06:53:48,981:INFO:version 3.2.0
2023-11-17 06:53:48,981:INFO:Initializing setup()
2023-11-17 06:53:48,981:INFO:self.USI: 2992
2023-11-17 06:53:48,981:INFO:self._variable_keys: {'y', '_available_plots', 'fold_shuffle_param', 'logging_param', 'is_multiclass', 'X_train', 'target_param', 'X_test', 'gpu_n_jobs_param', 'USI', 'exp_name_log', 'pipeline', 'y_test', 'data', 'X', 'fold_generator', 'html_param', 'log_plots_param', 'exp_id', 'fix_imbalance', 'seed', 'n_jobs_param', 'fold_groups_param', '_ml_usecase', 'gpu_param', 'y_train', 'idx', 'memory'}
2023-11-17 06:53:48,981:INFO:Checking environment
2023-11-17 06:53:48,981:INFO:python_version: 3.10.13
2023-11-17 06:53:48,981:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 06:53:48,981:INFO:machine: x86_64
2023-11-17 06:53:48,981:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 06:53:48,981:INFO:Memory: svmem(total=33436917760, available=28112994304, percent=15.9, used=4660932608, free=24407691264, active=1625948160, inactive=6440660992, buffers=364638208, cached=4003655680, shared=178077696, slab=536481792)
2023-11-17 06:53:48,982:INFO:Physical Core: 8
2023-11-17 06:53:48,982:INFO:Logical Core: 16
2023-11-17 06:53:48,982:INFO:Checking libraries
2023-11-17 06:53:48,982:INFO:System:
2023-11-17 06:53:48,982:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 06:53:48,982:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 06:53:48,982:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 06:53:48,982:INFO:PyCaret required dependencies:
2023-11-17 06:53:48,996:INFO:                 pip: 23.3
2023-11-17 06:53:48,996:INFO:          setuptools: 68.0.0
2023-11-17 06:53:48,996:INFO:             pycaret: 3.2.0
2023-11-17 06:53:48,996:INFO:             IPython: 8.17.2
2023-11-17 06:53:48,996:INFO:          ipywidgets: 8.1.1
2023-11-17 06:53:48,996:INFO:                tqdm: 4.66.1
2023-11-17 06:53:48,996:INFO:               numpy: 1.25.2
2023-11-17 06:53:48,996:INFO:              pandas: 1.5.3
2023-11-17 06:53:48,996:INFO:              jinja2: 3.1.2
2023-11-17 06:53:48,996:INFO:               scipy: 1.10.1
2023-11-17 06:53:48,996:INFO:              joblib: 1.3.2
2023-11-17 06:53:48,996:INFO:             sklearn: 1.2.2
2023-11-17 06:53:48,996:INFO:                pyod: 1.1.1
2023-11-17 06:53:48,996:INFO:            imblearn: 0.11.0
2023-11-17 06:53:48,996:INFO:   category_encoders: 2.6.3
2023-11-17 06:53:48,996:INFO:            lightgbm: 4.1.0
2023-11-17 06:53:48,996:INFO:               numba: 0.58.1
2023-11-17 06:53:48,996:INFO:            requests: 2.31.0
2023-11-17 06:53:48,997:INFO:          matplotlib: 3.6.0
2023-11-17 06:53:48,997:INFO:          scikitplot: 0.3.7
2023-11-17 06:53:48,997:INFO:         yellowbrick: 1.5
2023-11-17 06:53:48,997:INFO:              plotly: 5.18.0
2023-11-17 06:53:48,997:INFO:    plotly-resampler: Not installed
2023-11-17 06:53:48,997:INFO:             kaleido: 0.2.1
2023-11-17 06:53:48,997:INFO:           schemdraw: 0.15
2023-11-17 06:53:48,997:INFO:         statsmodels: 0.14.0
2023-11-17 06:53:48,997:INFO:              sktime: 0.21.1
2023-11-17 06:53:48,997:INFO:               tbats: 1.1.3
2023-11-17 06:53:48,997:INFO:            pmdarima: 2.0.4
2023-11-17 06:53:48,997:INFO:              psutil: 5.9.0
2023-11-17 06:53:48,997:INFO:          markupsafe: 2.1.3
2023-11-17 06:53:48,997:INFO:             pickle5: Not installed
2023-11-17 06:53:48,997:INFO:         cloudpickle: 3.0.0
2023-11-17 06:53:48,997:INFO:         deprecation: 2.1.0
2023-11-17 06:53:48,997:INFO:              xxhash: 3.4.1
2023-11-17 06:53:48,997:INFO:           wurlitzer: 3.0.3
2023-11-17 06:53:48,997:INFO:PyCaret optional dependencies:
2023-11-17 06:53:49,008:INFO:                shap: Not installed
2023-11-17 06:53:49,008:INFO:           interpret: Not installed
2023-11-17 06:53:49,008:INFO:                umap: Not installed
2023-11-17 06:53:49,008:INFO:     ydata_profiling: Not installed
2023-11-17 06:53:49,008:INFO:  explainerdashboard: Not installed
2023-11-17 06:53:49,008:INFO:             autoviz: Not installed
2023-11-17 06:53:49,008:INFO:           fairlearn: Not installed
2023-11-17 06:53:49,008:INFO:          deepchecks: Not installed
2023-11-17 06:53:49,008:INFO:             xgboost: Not installed
2023-11-17 06:53:49,008:INFO:            catboost: Not installed
2023-11-17 06:53:49,008:INFO:              kmodes: Not installed
2023-11-17 06:53:49,008:INFO:             mlxtend: Not installed
2023-11-17 06:53:49,008:INFO:       statsforecast: Not installed
2023-11-17 06:53:49,008:INFO:        tune_sklearn: Not installed
2023-11-17 06:53:49,008:INFO:                 ray: Not installed
2023-11-17 06:53:49,008:INFO:            hyperopt: Not installed
2023-11-17 06:53:49,008:INFO:              optuna: Not installed
2023-11-17 06:53:49,008:INFO:               skopt: Not installed
2023-11-17 06:53:49,008:INFO:              mlflow: Not installed
2023-11-17 06:53:49,008:INFO:              gradio: Not installed
2023-11-17 06:53:49,008:INFO:             fastapi: Not installed
2023-11-17 06:53:49,008:INFO:             uvicorn: Not installed
2023-11-17 06:53:49,008:INFO:              m2cgen: Not installed
2023-11-17 06:53:49,008:INFO:           evidently: Not installed
2023-11-17 06:53:49,008:INFO:               fugue: Not installed
2023-11-17 06:53:49,008:INFO:           streamlit: Not installed
2023-11-17 06:53:49,008:INFO:             prophet: Not installed
2023-11-17 06:53:49,008:INFO:None
2023-11-17 06:53:49,008:INFO:Set up data.
2023-11-17 06:53:49,017:INFO:Set up folding strategy.
2023-11-17 06:53:49,017:INFO:Set up train/test split.
2023-11-17 06:53:49,019:INFO:Set up index.
2023-11-17 06:53:49,020:INFO:Assigning column types.
2023-11-17 06:53:49,022:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 06:53:49,053:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 06:53:49,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 06:53:49,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 06:53:49,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 06:53:49,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,124:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 06:53:49,154:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 06:53:49,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,203:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 06:53:49,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,222:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 06:53:49,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,316:INFO:Preparing preprocessing pipeline...
2023-11-17 06:53:49,316:INFO:Set up label encoding.
2023-11-17 06:53:49,316:INFO:Set up simple imputation.
2023-11-17 06:53:49,317:INFO:Set up column name cleaning.
2023-11-17 06:53:49,332:INFO:Finished creating preprocessing pipeline.
2023-11-17 06:53:49,336:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 06:53:49,336:INFO:Creating final display dataframe.
2023-11-17 06:53:49,386:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              2992
2023-11-17 06:53:49,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:53:49,488:INFO:setup() successfully completed in 0.51s...............
2023-11-17 06:56:56,617:INFO:Initializing get_config()
2023-11-17 06:56:56,617:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, variable=X_train_transformed)
2023-11-17 06:56:56,640:INFO:Variable: X_train returned as               id  radius_mean  texture_mean  perimeter_mean    area_mean  \
215    8810987.0    13.860000     16.930000       90.959999   578.900024   
338     897880.0    10.050000     17.530001       64.410004   310.799988   
218    8811842.0    19.799999     21.559999      129.699997  1230.000000   
287       8913.0    12.890000     13.120000       81.889999   515.900024   
458    9112594.0    13.000000     25.129999       82.610001   520.200012   
..           ...          ...           ...             ...          ...   
360  901034302.0    12.540000     18.070000       79.419998   491.899994   
301     892604.0    12.460000     19.889999       80.430000   471.299988   
406     905189.0    16.139999     14.860000      104.300003   800.000000   
433     908445.0    18.820000     21.969999      123.699997  1110.000000   
284    8912284.0    12.890000     15.700000       84.080002   516.599976   

     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \
215          0.10260           0.15170        0.099010             0.056020   
338          0.10070           0.07326        0.025110             0.017750   
218          0.09383           0.13060        0.127200             0.086910   
287          0.06955           0.03729        0.022600             0.011710   
458          0.08369           0.05073        0.012060             0.017620   
..               ...               ...             ...                  ...   
360          0.07436           0.02650        0.001194             0.005449   
301          0.08451           0.10140        0.068300             0.030990   
406          0.09495           0.08501        0.055000             0.045280   
433          0.10180           0.13890        0.159400             0.087440   
284          0.07818           0.09580        0.111500             0.033900   

     symmetry_mean  ...  radius_worst  texture_worst  perimeter_worst  \
215         0.2106  ...     15.750000      26.930000       104.400002   
338         0.1890  ...     11.160000      26.840000        71.980003   
218         0.2094  ...     25.730000      28.639999       170.300003   
287         0.1337  ...     13.620000      15.540000        87.400002   
458         0.1667  ...     14.340000      31.879999        91.059998   
..             ...  ...           ...            ...              ...   
360         0.1528  ...     13.720000      20.980000        86.820000   
301         0.1781  ...     13.460000      23.070000        88.129997   
406         0.1735  ...     17.709999      19.580000       115.900002   
433         0.1943  ...     22.660000      30.930000       145.300003   
284         0.1432  ...     13.900000      19.690001        92.120003   

      area_worst  smoothness_worst  compactness_worst  concavity_worst  \
215   750.099976           0.14600            0.43700         0.463600   
338   384.000000           0.14020            0.14020         0.105500   
218  2009.000000           0.13530            0.32350         0.361700   
287   577.000000           0.09616            0.11470         0.118600   
458   628.500000           0.12180            0.10930         0.044620   
..           ...               ...                ...              ...   
360   585.700012           0.09293            0.04327         0.003581   
301   551.299988           0.10500            0.21580         0.190400   
406   947.900024           0.12060            0.17220         0.231000   
433  1603.000000           0.13900            0.34630         0.391200   
284   595.599976           0.09926            0.23170         0.334400   

     concave points_worst  symmetry_worst  fractal_dimension_worst  
215               0.16540          0.3630                  0.10590  
338               0.06499          0.2894                  0.07664  
218               0.18200          0.3070                  0.08255  
287               0.05366          0.2309                  0.06915  
458               0.05921          0.2306                  0.06291  
..                    ...             ...                      ...  
360               0.01635          0.2233                  0.05521  
301               0.07625          0.2685                  0.07764  
406               0.11290          0.2778                  0.07012  
433               0.17080          0.3007                  0.08314  
284               0.10170          0.1999                  0.07127  

[398 rows x 31 columns]
2023-11-17 06:56:56,640:INFO:get_config() successfully completed......................................
2023-11-17 06:58:30,230:INFO:gpu_param set to False
2023-11-17 06:58:30,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:58:30,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:58:30,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 06:58:30,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 07:00:20,785:INFO:Initializing compare_models()
2023-11-17 07:00:20,786:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-17 07:00:20,786:INFO:Checking exceptions
2023-11-17 07:00:20,789:INFO:Preparing display monitor
2023-11-17 07:00:20,804:INFO:Initializing Logistic Regression
2023-11-17 07:00:20,804:INFO:Total runtime is 2.682209014892578e-06 minutes
2023-11-17 07:00:20,806:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:20,807:INFO:Initializing create_model()
2023-11-17 07:00:20,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:20,807:INFO:Checking exceptions
2023-11-17 07:00:20,807:INFO:Importing libraries
2023-11-17 07:00:20,807:INFO:Copying training dataset
2023-11-17 07:00:20,810:INFO:Defining folds
2023-11-17 07:00:20,810:INFO:Declaring metric variables
2023-11-17 07:00:20,812:INFO:Importing untrained model
2023-11-17 07:00:20,815:INFO:Logistic Regression Imported successfully
2023-11-17 07:00:20,820:INFO:Starting cross validation
2023-11-17 07:00:20,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:21,867:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,869:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,870:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:21,871:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,892:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,895:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,896:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,896:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:21,897:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,898:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,898:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:21,899:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,918:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,920:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,921:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:21,921:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,923:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,925:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,927:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:21,928:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,998:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:21,999:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,000:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:22,001:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,136:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,137:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,138:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:22,139:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,172:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,174:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,175:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:22,175:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,201:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,201:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,203:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,203:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,204:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:22,204:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:22,205:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,205:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,209:INFO:Calculating mean and std
2023-11-17 07:00:22,210:INFO:Creating metrics dataframe
2023-11-17 07:00:22,213:INFO:Uploading results into container
2023-11-17 07:00:22,214:INFO:Uploading model into container now
2023-11-17 07:00:22,214:INFO:_master_model_container: 1
2023-11-17 07:00:22,214:INFO:_display_container: 2
2023-11-17 07:00:22,215:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-17 07:00:22,215:INFO:create_model() successfully completed......................................
2023-11-17 07:00:22,306:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:22,306:INFO:Creating metrics dataframe
2023-11-17 07:00:22,312:INFO:Initializing K Neighbors Classifier
2023-11-17 07:00:22,312:INFO:Total runtime is 0.025135552883148192 minutes
2023-11-17 07:00:22,314:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:22,315:INFO:Initializing create_model()
2023-11-17 07:00:22,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:22,315:INFO:Checking exceptions
2023-11-17 07:00:22,315:INFO:Importing libraries
2023-11-17 07:00:22,315:INFO:Copying training dataset
2023-11-17 07:00:22,317:INFO:Defining folds
2023-11-17 07:00:22,317:INFO:Declaring metric variables
2023-11-17 07:00:22,320:INFO:Importing untrained model
2023-11-17 07:00:22,322:INFO:K Neighbors Classifier Imported successfully
2023-11-17 07:00:22,326:INFO:Starting cross validation
2023-11-17 07:00:22,327:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:22,372:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,374:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,375:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,386:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,386:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,386:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,388:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,389:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,389:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,390:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,390:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:22,391:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,120:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,121:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,123:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,145:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,147:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,147:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,148:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,149:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,150:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,150:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,152:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,154:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,157:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,157:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,159:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,159:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,161:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,161:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,170:INFO:Calculating mean and std
2023-11-17 07:00:23,172:INFO:Creating metrics dataframe
2023-11-17 07:00:23,176:INFO:Uploading results into container
2023-11-17 07:00:23,176:INFO:Uploading model into container now
2023-11-17 07:00:23,177:INFO:_master_model_container: 2
2023-11-17 07:00:23,177:INFO:_display_container: 2
2023-11-17 07:00:23,178:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-17 07:00:23,178:INFO:create_model() successfully completed......................................
2023-11-17 07:00:23,272:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:23,273:INFO:Creating metrics dataframe
2023-11-17 07:00:23,279:INFO:Initializing Naive Bayes
2023-11-17 07:00:23,279:INFO:Total runtime is 0.0412512461344401 minutes
2023-11-17 07:00:23,281:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:23,281:INFO:Initializing create_model()
2023-11-17 07:00:23,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:23,281:INFO:Checking exceptions
2023-11-17 07:00:23,281:INFO:Importing libraries
2023-11-17 07:00:23,281:INFO:Copying training dataset
2023-11-17 07:00:23,284:INFO:Defining folds
2023-11-17 07:00:23,284:INFO:Declaring metric variables
2023-11-17 07:00:23,286:INFO:Importing untrained model
2023-11-17 07:00:23,289:INFO:Naive Bayes Imported successfully
2023-11-17 07:00:23,293:INFO:Starting cross validation
2023-11-17 07:00:23,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:23,318:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,319:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,319:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,320:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,320:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,320:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,321:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,321:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,321:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,322:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,322:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,322:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,323:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,323:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,324:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,324:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,325:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,326:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,327:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,327:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,328:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,329:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,329:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,330:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,331:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,332:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,332:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,332:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,333:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,334:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,334:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,334:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,336:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,336:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,337:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,338:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,350:INFO:Calculating mean and std
2023-11-17 07:00:23,351:INFO:Creating metrics dataframe
2023-11-17 07:00:23,353:INFO:Uploading results into container
2023-11-17 07:00:23,353:INFO:Uploading model into container now
2023-11-17 07:00:23,354:INFO:_master_model_container: 3
2023-11-17 07:00:23,354:INFO:_display_container: 2
2023-11-17 07:00:23,354:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-17 07:00:23,354:INFO:create_model() successfully completed......................................
2023-11-17 07:00:23,432:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:23,432:INFO:Creating metrics dataframe
2023-11-17 07:00:23,438:INFO:Initializing Decision Tree Classifier
2023-11-17 07:00:23,438:INFO:Total runtime is 0.04390785694122314 minutes
2023-11-17 07:00:23,441:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:23,441:INFO:Initializing create_model()
2023-11-17 07:00:23,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:23,441:INFO:Checking exceptions
2023-11-17 07:00:23,441:INFO:Importing libraries
2023-11-17 07:00:23,441:INFO:Copying training dataset
2023-11-17 07:00:23,444:INFO:Defining folds
2023-11-17 07:00:23,444:INFO:Declaring metric variables
2023-11-17 07:00:23,446:INFO:Importing untrained model
2023-11-17 07:00:23,448:INFO:Decision Tree Classifier Imported successfully
2023-11-17 07:00:23,452:INFO:Starting cross validation
2023-11-17 07:00:23,453:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:23,481:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,483:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,483:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,483:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,484:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,484:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,485:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,485:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,486:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,486:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,487:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,488:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,489:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,491:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,491:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,491:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,492:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,493:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,494:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,495:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,495:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,495:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,496:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,496:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,497:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,497:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,498:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,499:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,499:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,502:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,510:INFO:Calculating mean and std
2023-11-17 07:00:23,510:INFO:Creating metrics dataframe
2023-11-17 07:00:23,512:INFO:Uploading results into container
2023-11-17 07:00:23,513:INFO:Uploading model into container now
2023-11-17 07:00:23,513:INFO:_master_model_container: 4
2023-11-17 07:00:23,513:INFO:_display_container: 2
2023-11-17 07:00:23,513:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1, splitter='best')
2023-11-17 07:00:23,513:INFO:create_model() successfully completed......................................
2023-11-17 07:00:23,594:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:23,594:INFO:Creating metrics dataframe
2023-11-17 07:00:23,601:INFO:Initializing SVM - Linear Kernel
2023-11-17 07:00:23,601:INFO:Total runtime is 0.04661548932393392 minutes
2023-11-17 07:00:23,603:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:23,603:INFO:Initializing create_model()
2023-11-17 07:00:23,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:23,603:INFO:Checking exceptions
2023-11-17 07:00:23,603:INFO:Importing libraries
2023-11-17 07:00:23,603:INFO:Copying training dataset
2023-11-17 07:00:23,606:INFO:Defining folds
2023-11-17 07:00:23,606:INFO:Declaring metric variables
2023-11-17 07:00:23,609:INFO:Importing untrained model
2023-11-17 07:00:23,611:INFO:SVM - Linear Kernel Imported successfully
2023-11-17 07:00:23,615:INFO:Starting cross validation
2023-11-17 07:00:23,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:23,641:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,642:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,642:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,643:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,643:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,644:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,644:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,644:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,645:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,645:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,645:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,645:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,645:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,646:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,646:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,646:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,646:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,646:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,647:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,647:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,647:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,647:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,647:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,647:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,648:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,648:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,648:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,648:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,648:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,649:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,649:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,649:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,649:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,649:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,650:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 07:00:23,650:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,650:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,651:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,651:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,651:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,651:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,652:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,652:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,652:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,653:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,654:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,654:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,655:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,655:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:00:23,656:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,663:INFO:Calculating mean and std
2023-11-17 07:00:23,664:INFO:Creating metrics dataframe
2023-11-17 07:00:23,666:INFO:Uploading results into container
2023-11-17 07:00:23,666:INFO:Uploading model into container now
2023-11-17 07:00:23,666:INFO:_master_model_container: 5
2023-11-17 07:00:23,666:INFO:_display_container: 2
2023-11-17 07:00:23,667:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-17 07:00:23,667:INFO:create_model() successfully completed......................................
2023-11-17 07:00:23,743:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:23,743:INFO:Creating metrics dataframe
2023-11-17 07:00:23,750:INFO:Initializing Ridge Classifier
2023-11-17 07:00:23,750:INFO:Total runtime is 0.049107209841410315 minutes
2023-11-17 07:00:23,752:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:23,753:INFO:Initializing create_model()
2023-11-17 07:00:23,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:23,753:INFO:Checking exceptions
2023-11-17 07:00:23,753:INFO:Importing libraries
2023-11-17 07:00:23,753:INFO:Copying training dataset
2023-11-17 07:00:23,756:INFO:Defining folds
2023-11-17 07:00:23,756:INFO:Declaring metric variables
2023-11-17 07:00:23,758:INFO:Importing untrained model
2023-11-17 07:00:23,760:INFO:Ridge Classifier Imported successfully
2023-11-17 07:00:23,764:INFO:Starting cross validation
2023-11-17 07:00:23,764:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:23,781:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51567e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,784:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.63565e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,784:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.9941e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,786:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.36603e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,787:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,788:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51782e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,788:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,788:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51528e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,789:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51621e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,790:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,790:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.70338e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,790:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,791:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.97244e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,791:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,791:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,791:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,792:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,793:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,793:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,794:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,794:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.71885e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 07:00:23,794:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,795:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,795:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,795:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,796:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,796:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,797:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,798:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,798:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,798:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,799:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,799:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,799:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,799:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,800:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,800:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,800:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,801:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,802:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,802:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 07:00:23,803:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,803:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,803:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,804:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,804:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,806:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,806:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,806:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,809:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:23,821:INFO:Calculating mean and std
2023-11-17 07:00:23,821:INFO:Creating metrics dataframe
2023-11-17 07:00:23,824:INFO:Uploading results into container
2023-11-17 07:00:23,824:INFO:Uploading model into container now
2023-11-17 07:00:23,824:INFO:_master_model_container: 6
2023-11-17 07:00:23,824:INFO:_display_container: 2
2023-11-17 07:00:23,825:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1, solver='auto',
                tol=0.0001)
2023-11-17 07:00:23,825:INFO:create_model() successfully completed......................................
2023-11-17 07:00:23,902:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:23,902:INFO:Creating metrics dataframe
2023-11-17 07:00:23,909:INFO:Initializing Random Forest Classifier
2023-11-17 07:00:23,909:INFO:Total runtime is 0.051751800378163654 minutes
2023-11-17 07:00:23,911:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:23,911:INFO:Initializing create_model()
2023-11-17 07:00:23,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:23,911:INFO:Checking exceptions
2023-11-17 07:00:23,912:INFO:Importing libraries
2023-11-17 07:00:23,912:INFO:Copying training dataset
2023-11-17 07:00:23,914:INFO:Defining folds
2023-11-17 07:00:23,914:INFO:Declaring metric variables
2023-11-17 07:00:23,917:INFO:Importing untrained model
2023-11-17 07:00:23,919:INFO:Random Forest Classifier Imported successfully
2023-11-17 07:00:23,924:INFO:Starting cross validation
2023-11-17 07:00:23,924:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:24,147:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,149:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,150:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,152:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,152:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,153:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,154:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,156:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,158:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,160:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,163:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,165:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,167:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,169:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,170:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,171:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,171:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,172:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,172:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,173:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,173:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,174:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,175:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,175:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,175:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,176:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,177:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,178:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,178:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,180:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,193:INFO:Calculating mean and std
2023-11-17 07:00:24,193:INFO:Creating metrics dataframe
2023-11-17 07:00:24,196:INFO:Uploading results into container
2023-11-17 07:00:24,197:INFO:Uploading model into container now
2023-11-17 07:00:24,197:INFO:_master_model_container: 7
2023-11-17 07:00:24,197:INFO:_display_container: 2
2023-11-17 07:00:24,197:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1, verbose=0, warm_start=False)
2023-11-17 07:00:24,197:INFO:create_model() successfully completed......................................
2023-11-17 07:00:24,275:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:24,275:INFO:Creating metrics dataframe
2023-11-17 07:00:24,282:INFO:Initializing Quadratic Discriminant Analysis
2023-11-17 07:00:24,282:INFO:Total runtime is 0.057971576849619545 minutes
2023-11-17 07:00:24,284:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:24,285:INFO:Initializing create_model()
2023-11-17 07:00:24,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:24,285:INFO:Checking exceptions
2023-11-17 07:00:24,285:INFO:Importing libraries
2023-11-17 07:00:24,285:INFO:Copying training dataset
2023-11-17 07:00:24,287:INFO:Defining folds
2023-11-17 07:00:24,287:INFO:Declaring metric variables
2023-11-17 07:00:24,289:INFO:Importing untrained model
2023-11-17 07:00:24,292:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-17 07:00:24,296:INFO:Starting cross validation
2023-11-17 07:00:24,297:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:24,325:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,326:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,327:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,327:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,327:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,328:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,329:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,329:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,329:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,329:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,329:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,330:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,330:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,331:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,331:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,332:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,332:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,332:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,333:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,333:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,334:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,335:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,335:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,335:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,335:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,336:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,337:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,338:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,338:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,338:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,343:INFO:Calculating mean and std
2023-11-17 07:00:24,344:INFO:Creating metrics dataframe
2023-11-17 07:00:24,346:INFO:Uploading results into container
2023-11-17 07:00:24,346:INFO:Uploading model into container now
2023-11-17 07:00:24,347:INFO:_master_model_container: 8
2023-11-17 07:00:24,347:INFO:_display_container: 2
2023-11-17 07:00:24,347:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-17 07:00:24,347:INFO:create_model() successfully completed......................................
2023-11-17 07:00:24,429:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:24,429:INFO:Creating metrics dataframe
2023-11-17 07:00:24,437:INFO:Initializing Ada Boost Classifier
2023-11-17 07:00:24,437:INFO:Total runtime is 0.06054453055063883 minutes
2023-11-17 07:00:24,439:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:24,439:INFO:Initializing create_model()
2023-11-17 07:00:24,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:24,439:INFO:Checking exceptions
2023-11-17 07:00:24,439:INFO:Importing libraries
2023-11-17 07:00:24,439:INFO:Copying training dataset
2023-11-17 07:00:24,442:INFO:Defining folds
2023-11-17 07:00:24,442:INFO:Declaring metric variables
2023-11-17 07:00:24,444:INFO:Importing untrained model
2023-11-17 07:00:24,446:INFO:Ada Boost Classifier Imported successfully
2023-11-17 07:00:24,450:INFO:Starting cross validation
2023-11-17 07:00:24,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:24,567:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,567:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,569:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,569:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,570:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,570:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,570:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,572:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,572:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,573:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,573:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,574:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,574:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,575:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,576:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,579:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,580:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,582:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,611:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,613:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,613:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,616:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,616:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,619:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,621:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,623:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,623:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,624:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,624:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,626:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,629:INFO:Calculating mean and std
2023-11-17 07:00:24,629:INFO:Creating metrics dataframe
2023-11-17 07:00:24,631:INFO:Uploading results into container
2023-11-17 07:00:24,632:INFO:Uploading model into container now
2023-11-17 07:00:24,632:INFO:_master_model_container: 9
2023-11-17 07:00:24,632:INFO:_display_container: 2
2023-11-17 07:00:24,632:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1)
2023-11-17 07:00:24,632:INFO:create_model() successfully completed......................................
2023-11-17 07:00:24,709:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:24,709:INFO:Creating metrics dataframe
2023-11-17 07:00:24,717:INFO:Initializing Gradient Boosting Classifier
2023-11-17 07:00:24,717:INFO:Total runtime is 0.06521510680516561 minutes
2023-11-17 07:00:24,719:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:24,719:INFO:Initializing create_model()
2023-11-17 07:00:24,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:24,719:INFO:Checking exceptions
2023-11-17 07:00:24,719:INFO:Importing libraries
2023-11-17 07:00:24,719:INFO:Copying training dataset
2023-11-17 07:00:24,723:INFO:Defining folds
2023-11-17 07:00:24,723:INFO:Declaring metric variables
2023-11-17 07:00:24,725:INFO:Importing untrained model
2023-11-17 07:00:24,728:INFO:Gradient Boosting Classifier Imported successfully
2023-11-17 07:00:24,733:INFO:Starting cross validation
2023-11-17 07:00:24,734:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:24,977:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,977:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,978:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,978:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,980:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,980:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,981:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,982:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,983:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,984:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,985:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:24,987:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,073:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,073:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,074:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,075:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,076:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,076:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,077:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,077:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,078:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,078:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,079:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,080:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,080:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,081:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,083:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,083:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,085:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,086:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,093:INFO:Calculating mean and std
2023-11-17 07:00:25,094:INFO:Creating metrics dataframe
2023-11-17 07:00:25,097:INFO:Uploading results into container
2023-11-17 07:00:25,097:INFO:Uploading model into container now
2023-11-17 07:00:25,097:INFO:_master_model_container: 10
2023-11-17 07:00:25,097:INFO:_display_container: 2
2023-11-17 07:00:25,098:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-17 07:00:25,098:INFO:create_model() successfully completed......................................
2023-11-17 07:00:25,178:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:25,178:INFO:Creating metrics dataframe
2023-11-17 07:00:25,185:INFO:Initializing Linear Discriminant Analysis
2023-11-17 07:00:25,185:INFO:Total runtime is 0.07302270730336508 minutes
2023-11-17 07:00:25,187:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:25,188:INFO:Initializing create_model()
2023-11-17 07:00:25,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:25,188:INFO:Checking exceptions
2023-11-17 07:00:25,188:INFO:Importing libraries
2023-11-17 07:00:25,188:INFO:Copying training dataset
2023-11-17 07:00:25,190:INFO:Defining folds
2023-11-17 07:00:25,190:INFO:Declaring metric variables
2023-11-17 07:00:25,192:INFO:Importing untrained model
2023-11-17 07:00:25,194:INFO:Linear Discriminant Analysis Imported successfully
2023-11-17 07:00:25,199:INFO:Starting cross validation
2023-11-17 07:00:25,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:25,230:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,231:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,232:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,233:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,233:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,233:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,234:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,234:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,234:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,235:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,236:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,236:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,236:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,236:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,237:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,238:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,238:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,238:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,240:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,240:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,241:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,241:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,241:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,242:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,242:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,242:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,243:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,244:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,245:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,247:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,260:INFO:Calculating mean and std
2023-11-17 07:00:25,260:INFO:Creating metrics dataframe
2023-11-17 07:00:25,262:INFO:Uploading results into container
2023-11-17 07:00:25,263:INFO:Uploading model into container now
2023-11-17 07:00:25,263:INFO:_master_model_container: 11
2023-11-17 07:00:25,263:INFO:_display_container: 2
2023-11-17 07:00:25,263:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-17 07:00:25,263:INFO:create_model() successfully completed......................................
2023-11-17 07:00:25,339:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:25,339:INFO:Creating metrics dataframe
2023-11-17 07:00:25,347:INFO:Initializing Extra Trees Classifier
2023-11-17 07:00:25,347:INFO:Total runtime is 0.07571090857187908 minutes
2023-11-17 07:00:25,349:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:25,349:INFO:Initializing create_model()
2023-11-17 07:00:25,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:25,349:INFO:Checking exceptions
2023-11-17 07:00:25,349:INFO:Importing libraries
2023-11-17 07:00:25,349:INFO:Copying training dataset
2023-11-17 07:00:25,353:INFO:Defining folds
2023-11-17 07:00:25,353:INFO:Declaring metric variables
2023-11-17 07:00:25,356:INFO:Importing untrained model
2023-11-17 07:00:25,359:INFO:Extra Trees Classifier Imported successfully
2023-11-17 07:00:25,363:INFO:Starting cross validation
2023-11-17 07:00:25,364:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:00:25,548:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,548:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,550:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,550:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,551:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,551:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,553:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,553:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,553:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,554:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,555:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,556:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,558:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,561:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,561:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,561:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,563:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,563:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,563:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,564:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,565:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,565:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,565:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,567:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,568:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,569:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,571:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,573:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,574:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,576:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:00:25,582:INFO:Calculating mean and std
2023-11-17 07:00:25,583:INFO:Creating metrics dataframe
2023-11-17 07:00:25,585:INFO:Uploading results into container
2023-11-17 07:00:25,585:INFO:Uploading model into container now
2023-11-17 07:00:25,586:INFO:_master_model_container: 12
2023-11-17 07:00:25,586:INFO:_display_container: 2
2023-11-17 07:00:25,586:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 07:00:25,586:INFO:create_model() successfully completed......................................
2023-11-17 07:00:25,663:INFO:SubProcess create_model() end ==================================
2023-11-17 07:00:25,663:INFO:Creating metrics dataframe
2023-11-17 07:00:25,672:INFO:Initializing Light Gradient Boosting Machine
2023-11-17 07:00:25,672:INFO:Total runtime is 0.08112720648447673 minutes
2023-11-17 07:00:25,674:INFO:SubProcess create_model() called ==================================
2023-11-17 07:00:25,674:INFO:Initializing create_model()
2023-11-17 07:00:25,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:00:25,674:INFO:Checking exceptions
2023-11-17 07:00:25,674:INFO:Importing libraries
2023-11-17 07:00:25,674:INFO:Copying training dataset
2023-11-17 07:00:25,677:INFO:Defining folds
2023-11-17 07:00:25,677:INFO:Declaring metric variables
2023-11-17 07:00:25,679:INFO:Importing untrained model
2023-11-17 07:00:25,681:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-17 07:00:25,685:INFO:Starting cross validation
2023-11-17 07:00:25,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:10:42,377:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:42,412:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:42,428:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:46,297:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:46,324:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:46,336:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:54,973:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:54,974:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:55,008:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:55,521:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:55,548:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:55,560:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:57,059:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:57,061:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:10:57,062:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:14,829:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:14,844:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:14,852:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,155:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,156:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,158:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,766:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,768:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,770:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,977:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,982:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,984:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,997:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:15,999:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,001:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,005:INFO:Calculating mean and std
2023-11-17 07:11:16,006:INFO:Creating metrics dataframe
2023-11-17 07:11:16,008:INFO:Uploading results into container
2023-11-17 07:11:16,009:INFO:Uploading model into container now
2023-11-17 07:11:16,009:INFO:_master_model_container: 13
2023-11-17 07:11:16,009:INFO:_display_container: 2
2023-11-17 07:11:16,009:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-17 07:11:16,009:INFO:create_model() successfully completed......................................
2023-11-17 07:11:16,092:INFO:SubProcess create_model() end ==================================
2023-11-17 07:11:16,092:INFO:Creating metrics dataframe
2023-11-17 07:11:16,101:INFO:Initializing Dummy Classifier
2023-11-17 07:11:16,101:INFO:Total runtime is 10.921617738405862 minutes
2023-11-17 07:11:16,103:INFO:SubProcess create_model() called ==================================
2023-11-17 07:11:16,104:INFO:Initializing create_model()
2023-11-17 07:11:16,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc8acf532e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:11:16,104:INFO:Checking exceptions
2023-11-17 07:11:16,104:INFO:Importing libraries
2023-11-17 07:11:16,104:INFO:Copying training dataset
2023-11-17 07:11:16,107:INFO:Defining folds
2023-11-17 07:11:16,107:INFO:Declaring metric variables
2023-11-17 07:11:16,109:INFO:Importing untrained model
2023-11-17 07:11:16,111:INFO:Dummy Classifier Imported successfully
2023-11-17 07:11:16,115:INFO:Starting cross validation
2023-11-17 07:11:16,116:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 07:11:16,142:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,143:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,144:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,145:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,178:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,181:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,181:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,182:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,183:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,183:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,184:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,184:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,185:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,185:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,185:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,186:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,186:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,187:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,187:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,187:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,187:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,188:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,188:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,188:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,189:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,189:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,190:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,190:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,190:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,191:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,191:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,191:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,191:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,193:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,193:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,193:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,194:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,194:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,195:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 07:11:16,196:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 07:11:16,206:INFO:Calculating mean and std
2023-11-17 07:11:16,207:INFO:Creating metrics dataframe
2023-11-17 07:11:16,212:INFO:Uploading results into container
2023-11-17 07:11:16,212:INFO:Uploading model into container now
2023-11-17 07:11:16,213:INFO:_master_model_container: 14
2023-11-17 07:11:16,213:INFO:_display_container: 2
2023-11-17 07:11:16,213:INFO:DummyClassifier(constant=None, random_state=1, strategy='prior')
2023-11-17 07:11:16,213:INFO:create_model() successfully completed......................................
2023-11-17 07:11:16,311:INFO:SubProcess create_model() end ==================================
2023-11-17 07:11:16,311:INFO:Creating metrics dataframe
2023-11-17 07:11:16,326:INFO:Initializing create_model()
2023-11-17 07:11:16,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 07:11:16,326:INFO:Checking exceptions
2023-11-17 07:11:16,327:INFO:Importing libraries
2023-11-17 07:11:16,327:INFO:Copying training dataset
2023-11-17 07:11:16,330:INFO:Defining folds
2023-11-17 07:11:16,330:INFO:Declaring metric variables
2023-11-17 07:11:16,330:INFO:Importing untrained model
2023-11-17 07:11:16,330:INFO:Declaring custom model
2023-11-17 07:11:16,331:INFO:Extra Trees Classifier Imported successfully
2023-11-17 07:11:16,331:INFO:Cross validation set to False
2023-11-17 07:11:16,332:INFO:Fitting Model
2023-11-17 07:11:16,427:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 07:11:16,428:INFO:create_model() successfully completed......................................
2023-11-17 07:11:16,526:INFO:_master_model_container: 14
2023-11-17 07:11:16,526:INFO:_display_container: 2
2023-11-17 07:11:16,526:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 07:11:16,526:INFO:compare_models() successfully completed......................................
2023-11-17 07:19:54,156:INFO:Initializing plot_model()
2023-11-17 07:19:54,156:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:19:54,156:INFO:Checking exceptions
2023-11-17 07:19:54,173:INFO:Preloading libraries
2023-11-17 07:19:54,179:INFO:Copying training dataset
2023-11-17 07:19:54,179:INFO:Plot type: confusion_matrix
2023-11-17 07:19:54,235:INFO:Fitting Model
2023-11-17 07:19:54,235:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-11-17 07:19:54,236:INFO:Scoring test/hold-out set
2023-11-17 07:19:54,365:INFO:Visual Rendered Successfully
2023-11-17 07:19:54,452:INFO:plot_model() successfully completed......................................
2023-11-17 07:21:18,960:INFO:Initializing plot_model()
2023-11-17 07:21:18,960:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:21:18,960:INFO:Checking exceptions
2023-11-17 07:21:18,977:INFO:Preloading libraries
2023-11-17 07:21:18,982:INFO:Copying training dataset
2023-11-17 07:21:18,982:INFO:Plot type: feature
2023-11-17 07:21:18,983:WARNING:No coef_ found. Trying feature_importances_
2023-11-17 07:21:19,138:INFO:Visual Rendered Successfully
2023-11-17 07:21:19,223:INFO:plot_model() successfully completed......................................
2023-11-17 07:21:52,199:INFO:Initializing evaluate_model()
2023-11-17 07:21:52,200:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-17 07:21:52,208:INFO:Initializing plot_model()
2023-11-17 07:21:52,208:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:21:52,208:INFO:Checking exceptions
2023-11-17 07:21:52,224:INFO:Preloading libraries
2023-11-17 07:21:52,229:INFO:Copying training dataset
2023-11-17 07:21:52,229:INFO:Plot type: pipeline
2023-11-17 07:21:52,323:INFO:Visual Rendered Successfully
2023-11-17 07:21:52,409:INFO:plot_model() successfully completed......................................
2023-11-17 07:21:59,054:INFO:Initializing plot_model()
2023-11-17 07:21:59,054:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:21:59,055:INFO:Checking exceptions
2023-11-17 07:21:59,070:INFO:Preloading libraries
2023-11-17 07:21:59,078:INFO:Copying training dataset
2023-11-17 07:21:59,078:INFO:Plot type: parameter
2023-11-17 07:21:59,081:INFO:Visual Rendered Successfully
2023-11-17 07:21:59,170:INFO:plot_model() successfully completed......................................
2023-11-17 07:21:59,976:INFO:Initializing plot_model()
2023-11-17 07:21:59,976:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:21:59,976:INFO:Checking exceptions
2023-11-17 07:22:00,004:INFO:Preloading libraries
2023-11-17 07:22:00,026:INFO:Copying training dataset
2023-11-17 07:22:00,026:INFO:Plot type: pipeline
2023-11-17 07:22:00,118:INFO:Visual Rendered Successfully
2023-11-17 07:22:00,209:INFO:plot_model() successfully completed......................................
2023-11-17 07:22:54,143:INFO:Initializing plot_model()
2023-11-17 07:22:54,143:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:22:54,144:INFO:Checking exceptions
2023-11-17 07:22:54,160:INFO:Preloading libraries
2023-11-17 07:22:54,166:INFO:Copying training dataset
2023-11-17 07:22:54,166:INFO:Plot type: rfe
2023-11-17 07:22:54,223:INFO:Fitting Model
2023-11-17 07:23:50,715:INFO:Initializing evaluate_model()
2023-11-17 07:23:50,716:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-17 07:23:50,722:INFO:Initializing plot_model()
2023-11-17 07:23:50,722:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:23:50,722:INFO:Checking exceptions
2023-11-17 07:23:50,737:INFO:Preloading libraries
2023-11-17 07:23:50,743:INFO:Copying training dataset
2023-11-17 07:23:50,743:INFO:Plot type: pipeline
2023-11-17 07:23:50,837:INFO:Visual Rendered Successfully
2023-11-17 07:23:50,941:INFO:plot_model() successfully completed......................................
2023-11-17 07:23:50,949:INFO:Initializing plot_model()
2023-11-17 07:23:50,949:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:23:50,949:INFO:Checking exceptions
2023-11-17 07:23:50,964:INFO:Preloading libraries
2023-11-17 07:23:50,969:INFO:Copying training dataset
2023-11-17 07:23:50,969:INFO:Plot type: parameter
2023-11-17 07:23:50,972:INFO:Visual Rendered Successfully
2023-11-17 07:23:51,072:INFO:plot_model() successfully completed......................................
2023-11-17 07:23:52,591:INFO:Initializing plot_model()
2023-11-17 07:23:52,591:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:23:52,591:INFO:Checking exceptions
2023-11-17 07:23:52,626:INFO:Preloading libraries
2023-11-17 07:23:52,652:INFO:Copying training dataset
2023-11-17 07:23:52,652:INFO:Plot type: parameter
2023-11-17 07:23:52,659:INFO:Visual Rendered Successfully
2023-11-17 07:23:52,761:INFO:plot_model() successfully completed......................................
2023-11-17 07:23:53,763:INFO:Initializing plot_model()
2023-11-17 07:23:53,763:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:23:53,764:INFO:Checking exceptions
2023-11-17 07:23:53,780:INFO:Preloading libraries
2023-11-17 07:23:53,785:INFO:Copying training dataset
2023-11-17 07:23:53,785:INFO:Plot type: auc
2023-11-17 07:23:53,838:INFO:Fitting Model
2023-11-17 07:23:53,839:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-11-17 07:23:53,839:INFO:Scoring test/hold-out set
2023-11-17 07:23:53,979:INFO:Visual Rendered Successfully
2023-11-17 07:23:54,078:INFO:plot_model() successfully completed......................................
2023-11-17 07:23:59,829:INFO:Initializing plot_model()
2023-11-17 07:23:59,829:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:23:59,829:INFO:Checking exceptions
2023-11-17 07:23:59,886:INFO:Preloading libraries
2023-11-17 07:23:59,912:INFO:Copying training dataset
2023-11-17 07:23:59,912:INFO:Plot type: confusion_matrix
2023-11-17 07:23:59,977:INFO:Fitting Model
2023-11-17 07:23:59,977:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-11-17 07:23:59,978:INFO:Scoring test/hold-out set
2023-11-17 07:24:00,071:INFO:Visual Rendered Successfully
2023-11-17 07:24:00,176:INFO:plot_model() successfully completed......................................
2023-11-17 07:24:02,723:INFO:Initializing plot_model()
2023-11-17 07:24:02,723:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:24:02,723:INFO:Checking exceptions
2023-11-17 07:24:02,738:INFO:Preloading libraries
2023-11-17 07:24:02,743:INFO:Copying training dataset
2023-11-17 07:24:02,743:INFO:Plot type: pr
2023-11-17 07:24:02,794:INFO:Fitting Model
2023-11-17 07:24:02,795:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-11-17 07:24:02,795:INFO:Scoring test/hold-out set
2023-11-17 07:24:02,956:INFO:Visual Rendered Successfully
2023-11-17 07:24:03,054:INFO:plot_model() successfully completed......................................
2023-11-17 07:24:06,275:INFO:Initializing plot_model()
2023-11-17 07:24:06,275:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:24:06,275:INFO:Checking exceptions
2023-11-17 07:24:06,290:INFO:Preloading libraries
2023-11-17 07:24:06,296:INFO:Copying training dataset
2023-11-17 07:24:06,296:INFO:Plot type: feature
2023-11-17 07:24:06,296:WARNING:No coef_ found. Trying feature_importances_
2023-11-17 07:24:06,432:INFO:Visual Rendered Successfully
2023-11-17 07:24:06,532:INFO:plot_model() successfully completed......................................
2023-11-17 07:24:09,200:INFO:Initializing plot_model()
2023-11-17 07:24:09,201:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:24:09,201:INFO:Checking exceptions
2023-11-17 07:24:09,216:INFO:Preloading libraries
2023-11-17 07:24:09,221:INFO:Copying training dataset
2023-11-17 07:24:09,221:INFO:Plot type: rfe
2023-11-17 07:24:09,272:INFO:Fitting Model
2023-11-17 07:24:54,550:INFO:Initializing plot_model()
2023-11-17 07:24:54,550:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:24:54,550:INFO:Checking exceptions
2023-11-17 07:24:54,565:INFO:Preloading libraries
2023-11-17 07:24:54,571:INFO:Copying training dataset
2023-11-17 07:24:54,571:INFO:Plot type: pipeline
2023-11-17 07:24:54,659:INFO:Visual Rendered Successfully
2023-11-17 07:24:54,765:INFO:plot_model() successfully completed......................................
2023-11-17 07:24:56,079:INFO:Initializing plot_model()
2023-11-17 07:24:56,079:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:24:56,080:INFO:Checking exceptions
2023-11-17 07:24:56,125:INFO:Preloading libraries
2023-11-17 07:24:56,156:INFO:Copying training dataset
2023-11-17 07:24:56,156:INFO:Plot type: parameter
2023-11-17 07:24:56,163:INFO:Visual Rendered Successfully
2023-11-17 07:24:56,267:INFO:plot_model() successfully completed......................................
2023-11-17 07:25:04,940:INFO:Initializing plot_model()
2023-11-17 07:25:04,940:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:25:04,940:INFO:Checking exceptions
2023-11-17 07:25:04,956:INFO:Preloading libraries
2023-11-17 07:25:04,962:INFO:Copying training dataset
2023-11-17 07:25:04,962:INFO:Plot type: pipeline
2023-11-17 07:25:05,051:INFO:Visual Rendered Successfully
2023-11-17 07:25:05,153:INFO:plot_model() successfully completed......................................
2023-11-17 07:25:12,765:INFO:Initializing plot_model()
2023-11-17 07:25:12,765:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:25:12,765:INFO:Checking exceptions
2023-11-17 07:25:12,780:INFO:Preloading libraries
2023-11-17 07:25:12,785:INFO:Copying training dataset
2023-11-17 07:25:12,786:INFO:Plot type: class_report
2023-11-17 07:25:12,839:INFO:Fitting Model
2023-11-17 07:25:12,839:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-11-17 07:25:12,839:INFO:Scoring test/hold-out set
2023-11-17 07:25:12,991:INFO:Visual Rendered Successfully
2023-11-17 07:25:13,091:INFO:plot_model() successfully completed......................................
2023-11-17 07:25:19,034:INFO:Initializing plot_model()
2023-11-17 07:25:19,034:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ae99bd90>, system=True)
2023-11-17 07:25:19,034:INFO:Checking exceptions
2023-11-17 07:25:19,051:INFO:Preloading libraries
2023-11-17 07:25:19,057:INFO:Copying training dataset
2023-11-17 07:25:19,057:INFO:Plot type: error
2023-11-17 07:25:19,108:INFO:Fitting Model
2023-11-17 07:25:19,108:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-11-17 07:25:19,108:INFO:Scoring test/hold-out set
2023-11-17 07:25:19,238:INFO:Visual Rendered Successfully
2023-11-17 07:25:19,340:INFO:plot_model() successfully completed......................................
2023-11-17 07:28:37,743:INFO:Initializing save_model()
2023-11-17 07:28:37,743:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), model_name=bc_model_v1, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-17 07:28:37,743:INFO:Adding model into prep_pipe
2023-11-17 07:28:37,778:INFO:bc_model_v1.pkl saved in current working directory
2023-11-17 07:28:37,783:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave points_mean',
                                             's...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=1,
                                      verbose=0, warm_start=False))],
         verbose=False)
2023-11-17 07:28:37,783:INFO:save_model() successfully completed......................................
2023-11-17 07:29:17,598:INFO:Initializing load_model()
2023-11-17 07:29:17,598:INFO:load_model(model_name=bc_model_v1, platform=None, authentication=None, verbose=True)
2023-11-17 07:31:26,909:INFO:Initializing predict_model()
2023-11-17 07:31:26,909:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc8ac847760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave points_mean',
                                             's...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=1,
                                      verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fc90c5b3400>)
2023-11-17 07:31:26,909:INFO:Checking exceptions
2023-11-17 07:31:26,909:INFO:Preloading libraries
2023-11-17 07:31:26,909:INFO:Set up data.
2023-11-17 07:31:26,917:INFO:Set up index.
2023-11-17 07:35:36,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 07:35:36,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 07:35:36,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 07:35:36,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:32:58,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:32:58,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:32:58,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:32:58,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:33:23,340:INFO:Initializing load_model()
2023-11-17 10:33:23,340:INFO:load_model(model_name=bc_model_v1, platform=None, authentication=None, verbose=True)
2023-11-17 10:35:13,349:INFO:PyCaret ClassificationExperiment
2023-11-17 10:35:13,349:INFO:Logging name: clf-default-name
2023-11-17 10:35:13,349:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 10:35:13,349:INFO:version 3.2.0
2023-11-17 10:35:13,349:INFO:Initializing setup()
2023-11-17 10:35:13,349:INFO:self.USI: 9e7c
2023-11-17 10:35:13,349:INFO:self._variable_keys: {'log_plots_param', 'y_train', 'seed', 'USI', 'exp_id', 'target_param', 'fold_generator', 'fold_shuffle_param', 'memory', 'fold_groups_param', 'X_train', 'is_multiclass', 'data', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'pipeline', 'logging_param', 'X', '_ml_usecase', 'X_test', 'idx', 'fix_imbalance', 'n_jobs_param', 'html_param', 'exp_name_log', '_available_plots', 'y'}
2023-11-17 10:35:13,349:INFO:Checking environment
2023-11-17 10:35:13,349:INFO:python_version: 3.10.13
2023-11-17 10:35:13,349:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 10:35:13,349:INFO:machine: x86_64
2023-11-17 10:35:13,349:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 10:35:13,349:INFO:Memory: svmem(total=33436921856, available=29359095808, percent=12.2, used=3472371712, free=26632388608, active=1329344512, inactive=4604735488, buffers=176304128, cached=3155857408, shared=120541184, slab=452874240)
2023-11-17 10:35:13,350:INFO:Physical Core: 8
2023-11-17 10:35:13,350:INFO:Logical Core: 16
2023-11-17 10:35:13,350:INFO:Checking libraries
2023-11-17 10:35:13,350:INFO:System:
2023-11-17 10:35:13,350:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 10:35:13,350:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 10:35:13,350:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 10:35:13,350:INFO:PyCaret required dependencies:
2023-11-17 10:35:13,350:INFO:                 pip: 23.3
2023-11-17 10:35:13,350:INFO:          setuptools: 68.0.0
2023-11-17 10:35:13,350:INFO:             pycaret: 3.2.0
2023-11-17 10:35:13,350:INFO:             IPython: 8.17.2
2023-11-17 10:35:13,350:INFO:          ipywidgets: 8.1.1
2023-11-17 10:35:13,350:INFO:                tqdm: 4.66.1
2023-11-17 10:35:13,350:INFO:               numpy: 1.25.2
2023-11-17 10:35:13,350:INFO:              pandas: 1.5.3
2023-11-17 10:35:13,350:INFO:              jinja2: 3.1.2
2023-11-17 10:35:13,350:INFO:               scipy: 1.10.1
2023-11-17 10:35:13,350:INFO:              joblib: 1.3.2
2023-11-17 10:35:13,350:INFO:             sklearn: 1.2.2
2023-11-17 10:35:13,350:INFO:                pyod: 1.1.1
2023-11-17 10:35:13,350:INFO:            imblearn: 0.11.0
2023-11-17 10:35:13,350:INFO:   category_encoders: 2.6.3
2023-11-17 10:35:13,350:INFO:            lightgbm: 4.1.0
2023-11-17 10:35:13,350:INFO:               numba: 0.58.1
2023-11-17 10:35:13,350:INFO:            requests: 2.31.0
2023-11-17 10:35:13,350:INFO:          matplotlib: 3.6.0
2023-11-17 10:35:13,350:INFO:          scikitplot: 0.3.7
2023-11-17 10:35:13,350:INFO:         yellowbrick: 1.5
2023-11-17 10:35:13,350:INFO:              plotly: 5.18.0
2023-11-17 10:35:13,350:INFO:    plotly-resampler: Not installed
2023-11-17 10:35:13,351:INFO:             kaleido: 0.2.1
2023-11-17 10:35:13,351:INFO:           schemdraw: 0.15
2023-11-17 10:35:13,351:INFO:         statsmodels: 0.14.0
2023-11-17 10:35:13,351:INFO:              sktime: 0.21.1
2023-11-17 10:35:13,351:INFO:               tbats: 1.1.3
2023-11-17 10:35:13,351:INFO:            pmdarima: 2.0.4
2023-11-17 10:35:13,351:INFO:              psutil: 5.9.0
2023-11-17 10:35:13,351:INFO:          markupsafe: 2.1.3
2023-11-17 10:35:13,351:INFO:             pickle5: Not installed
2023-11-17 10:35:13,351:INFO:         cloudpickle: 3.0.0
2023-11-17 10:35:13,351:INFO:         deprecation: 2.1.0
2023-11-17 10:35:13,351:INFO:              xxhash: 3.4.1
2023-11-17 10:35:13,351:INFO:           wurlitzer: 3.0.3
2023-11-17 10:35:13,351:INFO:PyCaret optional dependencies:
2023-11-17 10:35:13,394:INFO:                shap: Not installed
2023-11-17 10:35:13,394:INFO:           interpret: Not installed
2023-11-17 10:35:13,394:INFO:                umap: Not installed
2023-11-17 10:35:13,394:INFO:     ydata_profiling: Not installed
2023-11-17 10:35:13,394:INFO:  explainerdashboard: Not installed
2023-11-17 10:35:13,394:INFO:             autoviz: 0.1.732
2023-11-17 10:35:13,394:INFO:           fairlearn: Not installed
2023-11-17 10:35:13,394:INFO:          deepchecks: Not installed
2023-11-17 10:35:13,394:INFO:             xgboost: 2.0.2
2023-11-17 10:35:13,394:INFO:            catboost: Not installed
2023-11-17 10:35:13,394:INFO:              kmodes: Not installed
2023-11-17 10:35:13,394:INFO:             mlxtend: Not installed
2023-11-17 10:35:13,394:INFO:       statsforecast: Not installed
2023-11-17 10:35:13,394:INFO:        tune_sklearn: Not installed
2023-11-17 10:35:13,394:INFO:                 ray: Not installed
2023-11-17 10:35:13,394:INFO:            hyperopt: Not installed
2023-11-17 10:35:13,394:INFO:              optuna: Not installed
2023-11-17 10:35:13,394:INFO:               skopt: Not installed
2023-11-17 10:35:13,394:INFO:              mlflow: Not installed
2023-11-17 10:35:13,394:INFO:              gradio: Not installed
2023-11-17 10:35:13,394:INFO:             fastapi: Not installed
2023-11-17 10:35:13,394:INFO:             uvicorn: Not installed
2023-11-17 10:35:13,394:INFO:              m2cgen: Not installed
2023-11-17 10:35:13,394:INFO:           evidently: Not installed
2023-11-17 10:35:13,394:INFO:               fugue: Not installed
2023-11-17 10:35:13,394:INFO:           streamlit: Not installed
2023-11-17 10:35:13,394:INFO:             prophet: Not installed
2023-11-17 10:35:13,394:INFO:None
2023-11-17 10:35:13,394:INFO:Set up data.
2023-11-17 10:35:13,405:INFO:Set up folding strategy.
2023-11-17 10:35:13,405:INFO:Set up train/test split.
2023-11-17 10:35:13,409:INFO:Set up index.
2023-11-17 10:35:13,409:INFO:Assigning column types.
2023-11-17 10:35:13,411:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 10:35:13,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 10:35:13,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:35:13,463:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:35:13,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:35:13,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 10:35:13,495:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:35:13,513:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:35:13,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:35:13,515:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 10:35:13,544:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:35:13,563:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:35:13,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:35:13,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:35:13,611:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:35:13,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:35:13,613:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 10:35:13,659:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:35:13,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:35:13,707:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:35:13,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:35:13,710:INFO:Preparing preprocessing pipeline...
2023-11-17 10:35:13,714:INFO:Set up label encoding.
2023-11-17 10:35:13,714:INFO:Set up simple imputation.
2023-11-17 10:35:13,715:INFO:Set up column name cleaning.
2023-11-17 10:35:13,731:INFO:Finished creating preprocessing pipeline.
2023-11-17 10:35:13,735:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 10:35:13,735:INFO:Creating final display dataframe.
2023-11-17 10:35:13,784:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              9e7c
2023-11-17 10:35:13,838:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:35:13,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:35:13,889:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:35:13,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:35:13,891:INFO:setup() successfully completed in 0.54s...............
2023-11-17 10:35:16,149:INFO:Initializing load_model()
2023-11-17 10:35:16,149:INFO:load_model(model_name=bc_model_v1, platform=None, authentication=None, verbose=True)
2023-11-17 10:35:18,600:ERROR:
'explainerdashboard' is a soft dependency and not included in the pycaret installation. Please run: `pip install explainerdashboard` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-11-17 10:36:58,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:36:58,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:36:58,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:36:58,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:36:59,649:INFO:PyCaret ClassificationExperiment
2023-11-17 10:36:59,649:INFO:Logging name: clf-default-name
2023-11-17 10:36:59,649:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 10:36:59,649:INFO:version 3.2.0
2023-11-17 10:36:59,649:INFO:Initializing setup()
2023-11-17 10:36:59,649:INFO:self.USI: 9c85
2023-11-17 10:36:59,649:INFO:self._variable_keys: {'y_train', 'seed', 'gpu_param', 'fix_imbalance', 'exp_id', 'y', 'X_train', 'fold_shuffle_param', 'fold_groups_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'html_param', 'X_test', 'USI', 'memory', 'log_plots_param', 'pipeline', 'is_multiclass', 'target_param', '_available_plots', 'idx', 'logging_param', 'X', 'fold_generator', 'gpu_n_jobs_param', 'data', 'y_test'}
2023-11-17 10:36:59,649:INFO:Checking environment
2023-11-17 10:36:59,649:INFO:python_version: 3.10.13
2023-11-17 10:36:59,649:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 10:36:59,649:INFO:machine: x86_64
2023-11-17 10:36:59,649:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 10:36:59,649:INFO:Memory: svmem(total=33436921856, available=29087145984, percent=13.0, used=3741380608, free=23973285888, active=1391505408, inactive=7100768256, buffers=189607936, cached=5532647424, shared=123465728, slab=544108544)
2023-11-17 10:36:59,650:INFO:Physical Core: 8
2023-11-17 10:36:59,650:INFO:Logical Core: 16
2023-11-17 10:36:59,650:INFO:Checking libraries
2023-11-17 10:36:59,650:INFO:System:
2023-11-17 10:36:59,650:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 10:36:59,650:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 10:36:59,650:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 10:36:59,650:INFO:PyCaret required dependencies:
2023-11-17 10:36:59,669:INFO:                 pip: 23.3
2023-11-17 10:36:59,670:INFO:          setuptools: 68.0.0
2023-11-17 10:36:59,670:INFO:             pycaret: 3.2.0
2023-11-17 10:36:59,670:INFO:             IPython: 8.17.2
2023-11-17 10:36:59,670:INFO:          ipywidgets: 8.1.1
2023-11-17 10:36:59,670:INFO:                tqdm: 4.66.1
2023-11-17 10:36:59,670:INFO:               numpy: 1.24.4
2023-11-17 10:36:59,670:INFO:              pandas: 1.5.3
2023-11-17 10:36:59,670:INFO:              jinja2: 3.1.2
2023-11-17 10:36:59,670:INFO:               scipy: 1.10.1
2023-11-17 10:36:59,670:INFO:              joblib: 1.3.2
2023-11-17 10:36:59,670:INFO:             sklearn: 1.2.2
2023-11-17 10:36:59,670:INFO:                pyod: 1.1.1
2023-11-17 10:36:59,670:INFO:            imblearn: 0.11.0
2023-11-17 10:36:59,670:INFO:   category_encoders: 2.6.3
2023-11-17 10:36:59,670:INFO:            lightgbm: 4.1.0
2023-11-17 10:36:59,670:INFO:               numba: 0.58.1
2023-11-17 10:36:59,670:INFO:            requests: 2.31.0
2023-11-17 10:36:59,670:INFO:          matplotlib: 3.6.0
2023-11-17 10:36:59,670:INFO:          scikitplot: 0.3.7
2023-11-17 10:36:59,670:INFO:         yellowbrick: 1.5
2023-11-17 10:36:59,670:INFO:              plotly: 5.18.0
2023-11-17 10:36:59,670:INFO:    plotly-resampler: Not installed
2023-11-17 10:36:59,670:INFO:             kaleido: 0.2.1
2023-11-17 10:36:59,670:INFO:           schemdraw: 0.15
2023-11-17 10:36:59,670:INFO:         statsmodels: 0.14.0
2023-11-17 10:36:59,670:INFO:              sktime: 0.21.1
2023-11-17 10:36:59,670:INFO:               tbats: 1.1.3
2023-11-17 10:36:59,670:INFO:            pmdarima: 2.0.4
2023-11-17 10:36:59,670:INFO:              psutil: 5.9.0
2023-11-17 10:36:59,670:INFO:          markupsafe: 2.1.3
2023-11-17 10:36:59,670:INFO:             pickle5: Not installed
2023-11-17 10:36:59,670:INFO:         cloudpickle: 3.0.0
2023-11-17 10:36:59,670:INFO:         deprecation: 2.1.0
2023-11-17 10:36:59,670:INFO:              xxhash: 3.4.1
2023-11-17 10:36:59,670:INFO:           wurlitzer: 3.0.3
2023-11-17 10:36:59,670:INFO:PyCaret optional dependencies:
2023-11-17 10:36:59,689:INFO:                shap: 0.43.0
2023-11-17 10:36:59,689:INFO:           interpret: 0.4.4
2023-11-17 10:36:59,689:INFO:                umap: 0.5.4
2023-11-17 10:36:59,689:INFO:     ydata_profiling: 4.6.1
2023-11-17 10:36:59,689:INFO:  explainerdashboard: 0.4.3
2023-11-17 10:36:59,689:INFO:             autoviz: 0.1.732
2023-11-17 10:36:59,689:INFO:           fairlearn: 0.7.0
2023-11-17 10:36:59,689:INFO:          deepchecks: Not installed
2023-11-17 10:36:59,689:INFO:             xgboost: 2.0.2
2023-11-17 10:36:59,689:INFO:            catboost: Not installed
2023-11-17 10:36:59,689:INFO:              kmodes: Not installed
2023-11-17 10:36:59,689:INFO:             mlxtend: Not installed
2023-11-17 10:36:59,689:INFO:       statsforecast: Not installed
2023-11-17 10:36:59,689:INFO:        tune_sklearn: Not installed
2023-11-17 10:36:59,689:INFO:                 ray: Not installed
2023-11-17 10:36:59,689:INFO:            hyperopt: Not installed
2023-11-17 10:36:59,689:INFO:              optuna: Not installed
2023-11-17 10:36:59,689:INFO:               skopt: Not installed
2023-11-17 10:36:59,689:INFO:              mlflow: Not installed
2023-11-17 10:36:59,689:INFO:              gradio: Not installed
2023-11-17 10:36:59,689:INFO:             fastapi: Not installed
2023-11-17 10:36:59,689:INFO:             uvicorn: Not installed
2023-11-17 10:36:59,689:INFO:              m2cgen: Not installed
2023-11-17 10:36:59,689:INFO:           evidently: Not installed
2023-11-17 10:36:59,689:INFO:               fugue: Not installed
2023-11-17 10:36:59,689:INFO:           streamlit: Not installed
2023-11-17 10:36:59,689:INFO:             prophet: Not installed
2023-11-17 10:36:59,689:INFO:None
2023-11-17 10:36:59,689:INFO:Set up data.
2023-11-17 10:36:59,698:INFO:Set up folding strategy.
2023-11-17 10:36:59,698:INFO:Set up train/test split.
2023-11-17 10:36:59,700:INFO:Set up index.
2023-11-17 10:36:59,701:INFO:Assigning column types.
2023-11-17 10:36:59,703:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 10:36:59,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 10:36:59,729:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:36:59,747:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:36:59,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:36:59,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 10:36:59,774:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:36:59,790:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:36:59,792:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:36:59,792:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 10:36:59,818:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:36:59,834:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:36:59,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:36:59,861:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:36:59,876:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:36:59,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:36:59,878:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 10:36:59,920:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:36:59,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:36:59,962:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:37:00,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:37:00,007:INFO:Preparing preprocessing pipeline...
2023-11-17 10:37:00,007:INFO:Set up label encoding.
2023-11-17 10:37:00,007:INFO:Set up simple imputation.
2023-11-17 10:37:00,008:INFO:Set up column name cleaning.
2023-11-17 10:37:00,023:INFO:Finished creating preprocessing pipeline.
2023-11-17 10:37:00,027:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 10:37:00,027:INFO:Creating final display dataframe.
2023-11-17 10:37:00,077:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              9c85
2023-11-17 10:37:00,125:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:37:00,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:37:00,169:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:37:00,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:37:00,171:INFO:setup() successfully completed in 0.52s...............
2023-11-17 10:37:02,435:INFO:Initializing load_model()
2023-11-17 10:37:02,436:INFO:load_model(model_name=bc_model_v1, platform=None, authentication=None, verbose=True)
2023-11-17 10:37:02,461:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.17.2', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.1', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.3', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.17.2', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.1', 'imblearn': '0.11.0', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'x86_64'}}
  warnings.warn(

2023-11-17 10:37:05,772:INFO:Soft dependency imported: explainerdashboard: 0.4.3
2023-11-17 10:38:08,707:INFO:Initializing create_model()
2023-11-17 10:38:08,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fccd5c27130>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 10:38:08,708:INFO:Checking exceptions
2023-11-17 10:38:08,723:INFO:Importing libraries
2023-11-17 10:38:08,723:INFO:Copying training dataset
2023-11-17 10:38:08,726:INFO:Defining folds
2023-11-17 10:38:08,726:INFO:Declaring metric variables
2023-11-17 10:38:08,728:INFO:Importing untrained model
2023-11-17 10:38:08,730:INFO:Extra Trees Classifier Imported successfully
2023-11-17 10:38:08,735:INFO:Starting cross validation
2023-11-17 10:38:08,735:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 10:38:09,984:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:09,986:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:09,989:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:09,992:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:09,994:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:09,996:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:09,997:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,000:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,002:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,010:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,012:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,012:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,014:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,015:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,017:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,041:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,044:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,047:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,298:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,300:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,302:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,315:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,317:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,318:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,323:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,325:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,326:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,341:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,343:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,345:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:10,357:INFO:Calculating mean and std
2023-11-17 10:38:10,358:INFO:Creating metrics dataframe
2023-11-17 10:38:10,363:INFO:Finalizing model
2023-11-17 10:38:10,470:INFO:Uploading results into container
2023-11-17 10:38:10,471:INFO:Uploading model into container now
2023-11-17 10:38:10,479:INFO:_master_model_container: 1
2023-11-17 10:38:10,479:INFO:_display_container: 2
2023-11-17 10:38:10,479:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 10:38:10,479:INFO:create_model() successfully completed......................................
2023-11-17 10:38:23,487:INFO:Soft dependency imported: explainerdashboard: 0.4.3
2023-11-17 10:38:53,252:INFO:PyCaret ClassificationExperiment
2023-11-17 10:38:53,252:INFO:Logging name: clf-default-name
2023-11-17 10:38:53,252:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 10:38:53,252:INFO:version 3.2.0
2023-11-17 10:38:53,252:INFO:Initializing setup()
2023-11-17 10:38:53,252:INFO:self.USI: 1d35
2023-11-17 10:38:53,252:INFO:self._variable_keys: {'y_train', 'seed', 'gpu_param', 'fix_imbalance', 'exp_id', 'y', 'X_train', 'fold_shuffle_param', 'fold_groups_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'html_param', 'X_test', 'USI', 'memory', 'log_plots_param', 'pipeline', 'is_multiclass', 'target_param', '_available_plots', 'idx', 'logging_param', 'X', 'fold_generator', 'gpu_n_jobs_param', 'data', 'y_test'}
2023-11-17 10:38:53,252:INFO:Checking environment
2023-11-17 10:38:53,252:INFO:python_version: 3.10.13
2023-11-17 10:38:53,252:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 10:38:53,252:INFO:machine: x86_64
2023-11-17 10:38:53,252:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 10:38:53,252:INFO:Memory: svmem(total=33436921856, available=27873693696, percent=16.6, used=4968878080, free=22687125504, active=1402245120, inactive=8350478336, buffers=190349312, cached=5590568960, shared=109436928, slab=553779200)
2023-11-17 10:38:53,252:INFO:Physical Core: 8
2023-11-17 10:38:53,253:INFO:Logical Core: 16
2023-11-17 10:38:53,253:INFO:Checking libraries
2023-11-17 10:38:53,253:INFO:System:
2023-11-17 10:38:53,253:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 10:38:53,253:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 10:38:53,253:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 10:38:53,253:INFO:PyCaret required dependencies:
2023-11-17 10:38:53,253:INFO:                 pip: 23.3
2023-11-17 10:38:53,253:INFO:          setuptools: 68.0.0
2023-11-17 10:38:53,253:INFO:             pycaret: 3.2.0
2023-11-17 10:38:53,253:INFO:             IPython: 8.17.2
2023-11-17 10:38:53,253:INFO:          ipywidgets: 8.1.1
2023-11-17 10:38:53,253:INFO:                tqdm: 4.66.1
2023-11-17 10:38:53,253:INFO:               numpy: 1.24.4
2023-11-17 10:38:53,253:INFO:              pandas: 1.5.3
2023-11-17 10:38:53,253:INFO:              jinja2: 3.1.2
2023-11-17 10:38:53,253:INFO:               scipy: 1.10.1
2023-11-17 10:38:53,253:INFO:              joblib: 1.3.2
2023-11-17 10:38:53,253:INFO:             sklearn: 1.2.2
2023-11-17 10:38:53,253:INFO:                pyod: 1.1.1
2023-11-17 10:38:53,253:INFO:            imblearn: 0.11.0
2023-11-17 10:38:53,253:INFO:   category_encoders: 2.6.3
2023-11-17 10:38:53,253:INFO:            lightgbm: 4.1.0
2023-11-17 10:38:53,253:INFO:               numba: 0.58.1
2023-11-17 10:38:53,253:INFO:            requests: 2.31.0
2023-11-17 10:38:53,253:INFO:          matplotlib: 3.6.0
2023-11-17 10:38:53,253:INFO:          scikitplot: 0.3.7
2023-11-17 10:38:53,253:INFO:         yellowbrick: 1.5
2023-11-17 10:38:53,253:INFO:              plotly: 5.18.0
2023-11-17 10:38:53,253:INFO:    plotly-resampler: Not installed
2023-11-17 10:38:53,253:INFO:             kaleido: 0.2.1
2023-11-17 10:38:53,253:INFO:           schemdraw: 0.15
2023-11-17 10:38:53,253:INFO:         statsmodels: 0.14.0
2023-11-17 10:38:53,253:INFO:              sktime: 0.21.1
2023-11-17 10:38:53,253:INFO:               tbats: 1.1.3
2023-11-17 10:38:53,253:INFO:            pmdarima: 2.0.4
2023-11-17 10:38:53,254:INFO:              psutil: 5.9.0
2023-11-17 10:38:53,254:INFO:          markupsafe: 2.1.3
2023-11-17 10:38:53,254:INFO:             pickle5: Not installed
2023-11-17 10:38:53,254:INFO:         cloudpickle: 3.0.0
2023-11-17 10:38:53,254:INFO:         deprecation: 2.1.0
2023-11-17 10:38:53,254:INFO:              xxhash: 3.4.1
2023-11-17 10:38:53,254:INFO:           wurlitzer: 3.0.3
2023-11-17 10:38:53,254:INFO:PyCaret optional dependencies:
2023-11-17 10:38:53,254:INFO:                shap: 0.43.0
2023-11-17 10:38:53,254:INFO:           interpret: 0.4.4
2023-11-17 10:38:53,254:INFO:                umap: 0.5.4
2023-11-17 10:38:53,254:INFO:     ydata_profiling: 4.6.1
2023-11-17 10:38:53,254:INFO:  explainerdashboard: 0.4.3
2023-11-17 10:38:53,254:INFO:             autoviz: 0.1.732
2023-11-17 10:38:53,254:INFO:           fairlearn: 0.7.0
2023-11-17 10:38:53,254:INFO:          deepchecks: Not installed
2023-11-17 10:38:53,254:INFO:             xgboost: 2.0.2
2023-11-17 10:38:53,254:INFO:            catboost: Not installed
2023-11-17 10:38:53,254:INFO:              kmodes: Not installed
2023-11-17 10:38:53,254:INFO:             mlxtend: Not installed
2023-11-17 10:38:53,254:INFO:       statsforecast: Not installed
2023-11-17 10:38:53,254:INFO:        tune_sklearn: Not installed
2023-11-17 10:38:53,254:INFO:                 ray: Not installed
2023-11-17 10:38:53,254:INFO:            hyperopt: Not installed
2023-11-17 10:38:53,254:INFO:              optuna: Not installed
2023-11-17 10:38:53,254:INFO:               skopt: Not installed
2023-11-17 10:38:53,254:INFO:              mlflow: Not installed
2023-11-17 10:38:53,254:INFO:              gradio: Not installed
2023-11-17 10:38:53,254:INFO:             fastapi: Not installed
2023-11-17 10:38:53,254:INFO:             uvicorn: Not installed
2023-11-17 10:38:53,254:INFO:              m2cgen: Not installed
2023-11-17 10:38:53,254:INFO:           evidently: Not installed
2023-11-17 10:38:53,254:INFO:               fugue: Not installed
2023-11-17 10:38:53,254:INFO:           streamlit: Not installed
2023-11-17 10:38:53,254:INFO:             prophet: Not installed
2023-11-17 10:38:53,254:INFO:None
2023-11-17 10:38:53,254:INFO:Set up data.
2023-11-17 10:38:53,263:INFO:Set up folding strategy.
2023-11-17 10:38:53,263:INFO:Set up train/test split.
2023-11-17 10:38:53,267:INFO:Set up index.
2023-11-17 10:38:53,267:INFO:Assigning column types.
2023-11-17 10:38:53,270:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 10:38:53,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 10:38:53,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:38:53,319:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:38:53,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:38:53,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 10:38:53,348:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:38:53,366:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:38:53,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:38:53,368:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 10:38:53,395:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:38:53,411:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:38:53,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:38:53,441:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:38:53,458:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:38:53,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:38:53,459:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 10:38:53,503:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:38:53,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:38:53,547:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:38:53,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:38:53,549:INFO:Preparing preprocessing pipeline...
2023-11-17 10:38:53,549:INFO:Set up label encoding.
2023-11-17 10:38:53,549:INFO:Set up simple imputation.
2023-11-17 10:38:53,550:INFO:Set up column name cleaning.
2023-11-17 10:38:53,565:INFO:Finished creating preprocessing pipeline.
2023-11-17 10:38:53,569:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 10:38:53,569:INFO:Creating final display dataframe.
2023-11-17 10:38:53,621:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              1d35
2023-11-17 10:38:53,671:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:38:53,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:38:53,717:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:38:53,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:38:53,718:INFO:setup() successfully completed in 0.47s...............
2023-11-17 10:38:58,755:INFO:Initializing create_model()
2023-11-17 10:38:58,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcca836e1a0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 10:38:58,755:INFO:Checking exceptions
2023-11-17 10:38:58,765:INFO:Importing libraries
2023-11-17 10:38:58,765:INFO:Copying training dataset
2023-11-17 10:38:58,768:INFO:Defining folds
2023-11-17 10:38:58,768:INFO:Declaring metric variables
2023-11-17 10:38:58,771:INFO:Importing untrained model
2023-11-17 10:38:58,774:INFO:Extra Trees Classifier Imported successfully
2023-11-17 10:38:58,778:INFO:Starting cross validation
2023-11-17 10:38:58,779:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 10:38:58,976:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,978:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,979:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,981:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,982:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,982:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,984:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,984:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,986:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,987:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,989:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:58,991:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,747:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,749:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,752:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,755:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,758:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,761:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,761:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,763:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,765:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,779:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,781:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,783:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,790:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,792:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,792:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,795:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,795:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,797:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:38:59,805:INFO:Calculating mean and std
2023-11-17 10:38:59,806:INFO:Creating metrics dataframe
2023-11-17 10:38:59,810:INFO:Finalizing model
2023-11-17 10:38:59,910:INFO:Uploading results into container
2023-11-17 10:38:59,911:INFO:Uploading model into container now
2023-11-17 10:38:59,918:INFO:_master_model_container: 1
2023-11-17 10:38:59,918:INFO:_display_container: 2
2023-11-17 10:38:59,919:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 10:38:59,919:INFO:create_model() successfully completed......................................
2023-11-17 10:39:03,591:INFO:Soft dependency imported: explainerdashboard: 0.4.3
2023-11-17 10:41:46,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:41:46,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:41:46,212:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:41:46,212:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 10:41:47,776:INFO:PyCaret ClassificationExperiment
2023-11-17 10:41:47,776:INFO:Logging name: clf-default-name
2023-11-17 10:41:47,776:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 10:41:47,776:INFO:version 3.2.0
2023-11-17 10:41:47,776:INFO:Initializing setup()
2023-11-17 10:41:47,776:INFO:self.USI: 5310
2023-11-17 10:41:47,776:INFO:self._variable_keys: {'idx', 'X_train', 'y', 'gpu_n_jobs_param', '_available_plots', 'target_param', '_ml_usecase', 'log_plots_param', 'logging_param', 'pipeline', 'fold_shuffle_param', 'exp_name_log', 'n_jobs_param', 'fix_imbalance', 'exp_id', 'X', 'memory', 'fold_groups_param', 'fold_generator', 'X_test', 'y_test', 'is_multiclass', 'seed', 'data', 'y_train', 'USI', 'gpu_param', 'html_param'}
2023-11-17 10:41:47,776:INFO:Checking environment
2023-11-17 10:41:47,776:INFO:python_version: 3.10.13
2023-11-17 10:41:47,776:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 10:41:47,776:INFO:machine: x86_64
2023-11-17 10:41:47,776:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 10:41:47,777:INFO:Memory: svmem(total=33436921856, available=29028438016, percent=13.2, used=3795841024, free=23675572224, active=1510473728, inactive=7277633536, buffers=202276864, cached=5763231744, shared=127725568, slab=559484928)
2023-11-17 10:41:47,777:INFO:Physical Core: 8
2023-11-17 10:41:47,777:INFO:Logical Core: 16
2023-11-17 10:41:47,777:INFO:Checking libraries
2023-11-17 10:41:47,777:INFO:System:
2023-11-17 10:41:47,777:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 10:41:47,777:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 10:41:47,777:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 10:41:47,777:INFO:PyCaret required dependencies:
2023-11-17 10:41:47,797:INFO:                 pip: 23.3
2023-11-17 10:41:47,797:INFO:          setuptools: 68.0.0
2023-11-17 10:41:47,797:INFO:             pycaret: 3.2.0
2023-11-17 10:41:47,797:INFO:             IPython: 8.17.2
2023-11-17 10:41:47,797:INFO:          ipywidgets: 8.1.1
2023-11-17 10:41:47,797:INFO:                tqdm: 4.66.1
2023-11-17 10:41:47,797:INFO:               numpy: 1.24.4
2023-11-17 10:41:47,797:INFO:              pandas: 1.5.3
2023-11-17 10:41:47,797:INFO:              jinja2: 3.1.2
2023-11-17 10:41:47,797:INFO:               scipy: 1.10.1
2023-11-17 10:41:47,797:INFO:              joblib: 1.3.2
2023-11-17 10:41:47,797:INFO:             sklearn: 1.2.2
2023-11-17 10:41:47,797:INFO:                pyod: 1.1.1
2023-11-17 10:41:47,797:INFO:            imblearn: 0.11.0
2023-11-17 10:41:47,797:INFO:   category_encoders: 2.6.3
2023-11-17 10:41:47,797:INFO:            lightgbm: 4.1.0
2023-11-17 10:41:47,797:INFO:               numba: 0.58.1
2023-11-17 10:41:47,797:INFO:            requests: 2.31.0
2023-11-17 10:41:47,797:INFO:          matplotlib: 3.6.0
2023-11-17 10:41:47,797:INFO:          scikitplot: 0.3.7
2023-11-17 10:41:47,797:INFO:         yellowbrick: 1.5
2023-11-17 10:41:47,797:INFO:              plotly: 5.18.0
2023-11-17 10:41:47,797:INFO:    plotly-resampler: Not installed
2023-11-17 10:41:47,797:INFO:             kaleido: 0.2.1
2023-11-17 10:41:47,797:INFO:           schemdraw: 0.15
2023-11-17 10:41:47,797:INFO:         statsmodels: 0.14.0
2023-11-17 10:41:47,797:INFO:              sktime: 0.21.1
2023-11-17 10:41:47,797:INFO:               tbats: 1.1.3
2023-11-17 10:41:47,797:INFO:            pmdarima: 2.0.4
2023-11-17 10:41:47,797:INFO:              psutil: 5.9.0
2023-11-17 10:41:47,797:INFO:          markupsafe: 2.1.3
2023-11-17 10:41:47,797:INFO:             pickle5: Not installed
2023-11-17 10:41:47,797:INFO:         cloudpickle: 3.0.0
2023-11-17 10:41:47,797:INFO:         deprecation: 2.1.0
2023-11-17 10:41:47,797:INFO:              xxhash: 3.4.1
2023-11-17 10:41:47,797:INFO:           wurlitzer: 3.0.3
2023-11-17 10:41:47,798:INFO:PyCaret optional dependencies:
2023-11-17 10:41:47,815:INFO:                shap: 0.43.0
2023-11-17 10:41:47,815:INFO:           interpret: 0.4.4
2023-11-17 10:41:47,815:INFO:                umap: 0.5.4
2023-11-17 10:41:47,815:INFO:     ydata_profiling: 4.6.1
2023-11-17 10:41:47,815:INFO:  explainerdashboard: 0.4.3
2023-11-17 10:41:47,816:INFO:             autoviz: 0.1.732
2023-11-17 10:41:47,816:INFO:           fairlearn: 0.7.0
2023-11-17 10:41:47,816:INFO:          deepchecks: Not installed
2023-11-17 10:41:47,816:INFO:             xgboost: 2.0.2
2023-11-17 10:41:47,816:INFO:            catboost: Not installed
2023-11-17 10:41:47,816:INFO:              kmodes: Not installed
2023-11-17 10:41:47,816:INFO:             mlxtend: Not installed
2023-11-17 10:41:47,816:INFO:       statsforecast: Not installed
2023-11-17 10:41:47,816:INFO:        tune_sklearn: Not installed
2023-11-17 10:41:47,816:INFO:                 ray: Not installed
2023-11-17 10:41:47,816:INFO:            hyperopt: Not installed
2023-11-17 10:41:47,816:INFO:              optuna: Not installed
2023-11-17 10:41:47,816:INFO:               skopt: Not installed
2023-11-17 10:41:47,816:INFO:              mlflow: Not installed
2023-11-17 10:41:47,816:INFO:              gradio: Not installed
2023-11-17 10:41:47,816:INFO:             fastapi: Not installed
2023-11-17 10:41:47,816:INFO:             uvicorn: Not installed
2023-11-17 10:41:47,816:INFO:              m2cgen: Not installed
2023-11-17 10:41:47,816:INFO:           evidently: Not installed
2023-11-17 10:41:47,816:INFO:               fugue: Not installed
2023-11-17 10:41:47,816:INFO:           streamlit: Not installed
2023-11-17 10:41:47,816:INFO:             prophet: Not installed
2023-11-17 10:41:47,816:INFO:None
2023-11-17 10:41:47,816:INFO:Set up data.
2023-11-17 10:41:47,825:INFO:Set up folding strategy.
2023-11-17 10:41:47,825:INFO:Set up train/test split.
2023-11-17 10:41:47,828:INFO:Set up index.
2023-11-17 10:41:47,828:INFO:Assigning column types.
2023-11-17 10:41:47,830:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 10:41:47,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 10:41:47,859:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:41:47,877:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:41:47,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:41:47,906:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 10:41:47,906:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:41:47,924:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:41:47,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:41:47,925:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 10:41:47,953:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:41:47,970:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:41:47,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:41:48,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 10:41:48,017:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:41:48,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:41:48,018:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 10:41:48,063:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:41:48,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:41:48,107:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:41:48,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:41:48,151:INFO:Preparing preprocessing pipeline...
2023-11-17 10:41:48,152:INFO:Set up label encoding.
2023-11-17 10:41:48,152:INFO:Set up simple imputation.
2023-11-17 10:41:48,152:INFO:Set up column name cleaning.
2023-11-17 10:41:48,168:INFO:Finished creating preprocessing pipeline.
2023-11-17 10:41:48,172:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 10:41:48,172:INFO:Creating final display dataframe.
2023-11-17 10:41:48,223:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              5310
2023-11-17 10:41:48,274:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:41:48,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:41:48,321:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 10:41:48,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 10:41:48,323:INFO:setup() successfully completed in 0.55s...............
2023-11-17 10:41:48,871:INFO:Initializing create_model()
2023-11-17 10:41:48,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f79e566b9a0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 10:41:48,872:INFO:Checking exceptions
2023-11-17 10:41:48,883:INFO:Importing libraries
2023-11-17 10:41:48,883:INFO:Copying training dataset
2023-11-17 10:41:48,889:INFO:Defining folds
2023-11-17 10:41:48,889:INFO:Declaring metric variables
2023-11-17 10:41:48,892:INFO:Importing untrained model
2023-11-17 10:41:48,895:INFO:Extra Trees Classifier Imported successfully
2023-11-17 10:41:48,899:INFO:Starting cross validation
2023-11-17 10:41:48,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 10:41:50,108:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,109:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,110:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,111:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,113:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,114:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,124:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,128:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,131:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,179:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,181:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,183:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,200:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,203:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,206:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,253:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,255:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,257:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,331:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,333:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,335:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,480:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,481:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,483:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,493:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,495:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,497:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,510:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,513:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,515:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 10:41:50,522:INFO:Calculating mean and std
2023-11-17 10:41:50,523:INFO:Creating metrics dataframe
2023-11-17 10:41:50,528:INFO:Finalizing model
2023-11-17 10:41:50,629:INFO:Uploading results into container
2023-11-17 10:41:50,629:INFO:Uploading model into container now
2023-11-17 10:41:50,636:INFO:_master_model_container: 1
2023-11-17 10:41:50,636:INFO:_display_container: 2
2023-11-17 10:41:50,636:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 10:41:50,636:INFO:create_model() successfully completed......................................
2023-11-17 10:41:52,613:INFO:Soft dependency imported: explainerdashboard: 0.4.3
2023-11-17 12:29:09,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:29:09,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:29:09,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:29:09,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:29:09,564:INFO:PyCaret ClassificationExperiment
2023-11-17 12:29:09,564:INFO:Logging name: clf-default-name
2023-11-17 12:29:09,564:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 12:29:09,564:INFO:version 3.2.0
2023-11-17 12:29:09,564:INFO:Initializing setup()
2023-11-17 12:29:09,564:INFO:self.USI: 0573
2023-11-17 12:29:09,564:INFO:self._variable_keys: {'memory', 'fold_shuffle_param', 'y_train', '_ml_usecase', 'fold_generator', 'data', 'exp_name_log', 'USI', 'n_jobs_param', 'idx', 'pipeline', 'X_train', 'exp_id', 'seed', 'logging_param', 'html_param', 'X_test', 'fold_groups_param', 'target_param', 'y_test', '_available_plots', 'gpu_n_jobs_param', 'gpu_param', 'is_multiclass', 'y', 'X', 'log_plots_param', 'fix_imbalance'}
2023-11-17 12:29:09,564:INFO:Checking environment
2023-11-17 12:29:09,564:INFO:python_version: 3.10.13
2023-11-17 12:29:09,564:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 12:29:09,564:INFO:machine: x86_64
2023-11-17 12:29:09,564:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 12:29:09,564:INFO:Memory: svmem(total=33436913664, available=29541330944, percent=11.7, used=3291422720, free=27100823552, active=947806208, inactive=4647284736, buffers=126242816, cached=2918424576, shared=155766784, slab=337911808)
2023-11-17 12:29:09,565:INFO:Physical Core: 8
2023-11-17 12:29:09,565:INFO:Logical Core: 16
2023-11-17 12:29:09,565:INFO:Checking libraries
2023-11-17 12:29:09,565:INFO:System:
2023-11-17 12:29:09,565:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 12:29:09,565:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 12:29:09,565:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 12:29:09,565:INFO:PyCaret required dependencies:
2023-11-17 12:29:09,592:INFO:                 pip: 23.3
2023-11-17 12:29:09,592:INFO:          setuptools: 68.0.0
2023-11-17 12:29:09,592:INFO:             pycaret: 3.2.0
2023-11-17 12:29:09,592:INFO:             IPython: 8.17.2
2023-11-17 12:29:09,592:INFO:          ipywidgets: 8.1.1
2023-11-17 12:29:09,592:INFO:                tqdm: 4.66.1
2023-11-17 12:29:09,592:INFO:               numpy: 1.24.4
2023-11-17 12:29:09,592:INFO:              pandas: 1.5.3
2023-11-17 12:29:09,592:INFO:              jinja2: 3.1.2
2023-11-17 12:29:09,592:INFO:               scipy: 1.10.1
2023-11-17 12:29:09,592:INFO:              joblib: 1.3.2
2023-11-17 12:29:09,592:INFO:             sklearn: 1.2.2
2023-11-17 12:29:09,592:INFO:                pyod: 1.1.1
2023-11-17 12:29:09,592:INFO:            imblearn: 0.11.0
2023-11-17 12:29:09,592:INFO:   category_encoders: 2.6.3
2023-11-17 12:29:09,592:INFO:            lightgbm: 4.1.0
2023-11-17 12:29:09,592:INFO:               numba: 0.58.1
2023-11-17 12:29:09,592:INFO:            requests: 2.31.0
2023-11-17 12:29:09,592:INFO:          matplotlib: 3.6.0
2023-11-17 12:29:09,592:INFO:          scikitplot: 0.3.7
2023-11-17 12:29:09,592:INFO:         yellowbrick: 1.5
2023-11-17 12:29:09,592:INFO:              plotly: 5.18.0
2023-11-17 12:29:09,592:INFO:    plotly-resampler: Not installed
2023-11-17 12:29:09,592:INFO:             kaleido: 0.2.1
2023-11-17 12:29:09,592:INFO:           schemdraw: 0.15
2023-11-17 12:29:09,592:INFO:         statsmodels: 0.14.0
2023-11-17 12:29:09,592:INFO:              sktime: 0.21.1
2023-11-17 12:29:09,592:INFO:               tbats: 1.1.3
2023-11-17 12:29:09,592:INFO:            pmdarima: 2.0.4
2023-11-17 12:29:09,592:INFO:              psutil: 5.9.0
2023-11-17 12:29:09,592:INFO:          markupsafe: 2.1.3
2023-11-17 12:29:09,592:INFO:             pickle5: Not installed
2023-11-17 12:29:09,592:INFO:         cloudpickle: 3.0.0
2023-11-17 12:29:09,592:INFO:         deprecation: 2.1.0
2023-11-17 12:29:09,592:INFO:              xxhash: 3.4.1
2023-11-17 12:29:09,592:INFO:           wurlitzer: 3.0.3
2023-11-17 12:29:09,592:INFO:PyCaret optional dependencies:
2023-11-17 12:29:09,634:INFO:                shap: 0.43.0
2023-11-17 12:29:09,634:INFO:           interpret: 0.4.4
2023-11-17 12:29:09,634:INFO:                umap: 0.5.4
2023-11-17 12:29:09,634:INFO:     ydata_profiling: 4.6.1
2023-11-17 12:29:09,634:INFO:  explainerdashboard: 0.4.3
2023-11-17 12:29:09,634:INFO:             autoviz: 0.1.732
2023-11-17 12:29:09,634:INFO:           fairlearn: 0.7.0
2023-11-17 12:29:09,634:INFO:          deepchecks: Not installed
2023-11-17 12:29:09,634:INFO:             xgboost: 2.0.2
2023-11-17 12:29:09,634:INFO:            catboost: Not installed
2023-11-17 12:29:09,634:INFO:              kmodes: Not installed
2023-11-17 12:29:09,634:INFO:             mlxtend: Not installed
2023-11-17 12:29:09,634:INFO:       statsforecast: Not installed
2023-11-17 12:29:09,634:INFO:        tune_sklearn: Not installed
2023-11-17 12:29:09,634:INFO:                 ray: Not installed
2023-11-17 12:29:09,634:INFO:            hyperopt: Not installed
2023-11-17 12:29:09,634:INFO:              optuna: Not installed
2023-11-17 12:29:09,634:INFO:               skopt: Not installed
2023-11-17 12:29:09,634:INFO:              mlflow: Not installed
2023-11-17 12:29:09,634:INFO:              gradio: Not installed
2023-11-17 12:29:09,634:INFO:             fastapi: Not installed
2023-11-17 12:29:09,634:INFO:             uvicorn: Not installed
2023-11-17 12:29:09,634:INFO:              m2cgen: Not installed
2023-11-17 12:29:09,634:INFO:           evidently: Not installed
2023-11-17 12:29:09,634:INFO:               fugue: Not installed
2023-11-17 12:29:09,634:INFO:           streamlit: Not installed
2023-11-17 12:29:09,634:INFO:             prophet: Not installed
2023-11-17 12:29:09,634:INFO:None
2023-11-17 12:29:09,634:INFO:Set up data.
2023-11-17 12:29:09,645:INFO:Set up folding strategy.
2023-11-17 12:29:09,645:INFO:Set up train/test split.
2023-11-17 12:29:09,648:INFO:Set up index.
2023-11-17 12:29:09,649:INFO:Assigning column types.
2023-11-17 12:29:09,651:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 12:29:09,678:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 12:29:09,679:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:29:09,699:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:29:09,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:29:09,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 12:29:09,729:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:29:09,745:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:29:09,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:29:09,747:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 12:29:09,775:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:29:09,792:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:29:09,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:29:09,820:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:29:09,837:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:29:09,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:29:09,839:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 12:29:09,882:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:29:09,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:29:09,927:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:29:09,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:29:09,934:INFO:Preparing preprocessing pipeline...
2023-11-17 12:29:09,935:INFO:Set up label encoding.
2023-11-17 12:29:09,935:INFO:Set up simple imputation.
2023-11-17 12:29:09,935:INFO:Set up column name cleaning.
2023-11-17 12:29:09,951:INFO:Finished creating preprocessing pipeline.
2023-11-17 12:29:09,954:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 12:29:09,954:INFO:Creating final display dataframe.
2023-11-17 12:29:10,006:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              0573
2023-11-17 12:29:10,057:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:29:10,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:29:10,104:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:29:10,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:29:10,106:INFO:setup() successfully completed in 0.54s...............
2023-11-17 12:29:13,254:INFO:Initializing create_model()
2023-11-17 12:29:13,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f0750382770>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 12:29:13,255:INFO:Checking exceptions
2023-11-17 12:29:13,267:INFO:Importing libraries
2023-11-17 12:29:13,267:INFO:Copying training dataset
2023-11-17 12:29:13,270:INFO:Defining folds
2023-11-17 12:29:13,270:INFO:Declaring metric variables
2023-11-17 12:29:13,272:INFO:Importing untrained model
2023-11-17 12:29:13,275:INFO:Extra Trees Classifier Imported successfully
2023-11-17 12:29:13,281:INFO:Starting cross validation
2023-11-17 12:29:13,282:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 12:29:14,447:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,451:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,454:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,510:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,510:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,512:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,513:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,515:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,515:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,568:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,570:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,572:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,572:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,574:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,577:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,585:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,587:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,588:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,773:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,775:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,776:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,795:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,797:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,799:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,803:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,805:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,806:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,849:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,850:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,852:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:29:14,864:INFO:Calculating mean and std
2023-11-17 12:29:14,865:INFO:Creating metrics dataframe
2023-11-17 12:29:14,870:INFO:Finalizing model
2023-11-17 12:29:14,966:INFO:Uploading results into container
2023-11-17 12:29:14,966:INFO:Uploading model into container now
2023-11-17 12:29:14,973:INFO:_master_model_container: 1
2023-11-17 12:29:14,973:INFO:_display_container: 2
2023-11-17 12:29:14,973:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 12:29:14,973:INFO:create_model() successfully completed......................................
2023-11-17 12:34:05,716:ERROR:
'gradio' is a soft dependency and not included in the pycaret installation. Please run: `pip install gradio` to install.
Alternately, you can install this by running `pip install pycaret[mlops]`
NoneType: None
2023-11-17 12:36:39,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:36:39,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:36:39,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:36:39,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:36:39,501:INFO:PyCaret ClassificationExperiment
2023-11-17 12:36:39,501:INFO:Logging name: clf-default-name
2023-11-17 12:36:39,501:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 12:36:39,501:INFO:version 3.2.0
2023-11-17 12:36:39,501:INFO:Initializing setup()
2023-11-17 12:36:39,501:INFO:self.USI: ae69
2023-11-17 12:36:39,501:INFO:self._variable_keys: {'gpu_n_jobs_param', 'fold_generator', 'exp_id', 'pipeline', 'fold_shuffle_param', 'y_test', 'idx', '_available_plots', 'html_param', 'X_test', 'y_train', 'log_plots_param', 'n_jobs_param', 'fold_groups_param', 'y', 'is_multiclass', 'logging_param', 'fix_imbalance', 'data', 'memory', 'X', 'target_param', 'USI', 'X_train', 'gpu_param', 'seed', '_ml_usecase', 'exp_name_log'}
2023-11-17 12:36:39,501:INFO:Checking environment
2023-11-17 12:36:39,501:INFO:python_version: 3.10.13
2023-11-17 12:36:39,501:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 12:36:39,501:INFO:machine: x86_64
2023-11-17 12:36:39,501:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 12:36:39,501:INFO:Memory: svmem(total=33436913664, available=29414932480, percent=12.0, used=3407003648, free=24489848832, active=1144233984, inactive=6853595136, buffers=192589824, cached=5347471360, shared=130064384, slab=545755136)
2023-11-17 12:36:39,502:INFO:Physical Core: 8
2023-11-17 12:36:39,502:INFO:Logical Core: 16
2023-11-17 12:36:39,502:INFO:Checking libraries
2023-11-17 12:36:39,502:INFO:System:
2023-11-17 12:36:39,502:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 12:36:39,502:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 12:36:39,502:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 12:36:39,502:INFO:PyCaret required dependencies:
2023-11-17 12:36:39,520:INFO:                 pip: 23.3
2023-11-17 12:36:39,520:INFO:          setuptools: 68.0.0
2023-11-17 12:36:39,520:INFO:             pycaret: 3.2.0
2023-11-17 12:36:39,520:INFO:             IPython: 8.17.2
2023-11-17 12:36:39,520:INFO:          ipywidgets: 8.1.1
2023-11-17 12:36:39,520:INFO:                tqdm: 4.66.1
2023-11-17 12:36:39,520:INFO:               numpy: 1.24.4
2023-11-17 12:36:39,520:INFO:              pandas: 1.5.3
2023-11-17 12:36:39,520:INFO:              jinja2: 3.1.2
2023-11-17 12:36:39,520:INFO:               scipy: 1.10.1
2023-11-17 12:36:39,520:INFO:              joblib: 1.3.2
2023-11-17 12:36:39,520:INFO:             sklearn: 1.2.2
2023-11-17 12:36:39,520:INFO:                pyod: 1.1.1
2023-11-17 12:36:39,520:INFO:            imblearn: 0.11.0
2023-11-17 12:36:39,520:INFO:   category_encoders: 2.6.3
2023-11-17 12:36:39,520:INFO:            lightgbm: 4.1.0
2023-11-17 12:36:39,520:INFO:               numba: 0.58.1
2023-11-17 12:36:39,520:INFO:            requests: 2.31.0
2023-11-17 12:36:39,520:INFO:          matplotlib: 3.6.0
2023-11-17 12:36:39,520:INFO:          scikitplot: 0.3.7
2023-11-17 12:36:39,520:INFO:         yellowbrick: 1.5
2023-11-17 12:36:39,520:INFO:              plotly: 5.18.0
2023-11-17 12:36:39,521:INFO:    plotly-resampler: Not installed
2023-11-17 12:36:39,521:INFO:             kaleido: 0.2.1
2023-11-17 12:36:39,521:INFO:           schemdraw: 0.15
2023-11-17 12:36:39,521:INFO:         statsmodels: 0.14.0
2023-11-17 12:36:39,521:INFO:              sktime: 0.21.1
2023-11-17 12:36:39,521:INFO:               tbats: 1.1.3
2023-11-17 12:36:39,521:INFO:            pmdarima: 2.0.4
2023-11-17 12:36:39,521:INFO:              psutil: 5.9.0
2023-11-17 12:36:39,521:INFO:          markupsafe: 2.1.3
2023-11-17 12:36:39,521:INFO:             pickle5: Not installed
2023-11-17 12:36:39,521:INFO:         cloudpickle: 3.0.0
2023-11-17 12:36:39,521:INFO:         deprecation: 2.1.0
2023-11-17 12:36:39,521:INFO:              xxhash: 3.4.1
2023-11-17 12:36:39,521:INFO:           wurlitzer: 3.0.3
2023-11-17 12:36:39,521:INFO:PyCaret optional dependencies:
2023-11-17 12:36:39,539:INFO:                shap: 0.43.0
2023-11-17 12:36:39,539:INFO:           interpret: 0.4.4
2023-11-17 12:36:39,539:INFO:                umap: 0.5.4
2023-11-17 12:36:39,539:INFO:     ydata_profiling: 4.6.1
2023-11-17 12:36:39,539:INFO:  explainerdashboard: 0.4.3
2023-11-17 12:36:39,539:INFO:             autoviz: 0.1.732
2023-11-17 12:36:39,539:INFO:           fairlearn: 0.7.0
2023-11-17 12:36:39,539:INFO:          deepchecks: Not installed
2023-11-17 12:36:39,539:INFO:             xgboost: 2.0.2
2023-11-17 12:36:39,539:INFO:            catboost: Not installed
2023-11-17 12:36:39,539:INFO:              kmodes: Not installed
2023-11-17 12:36:39,539:INFO:             mlxtend: Not installed
2023-11-17 12:36:39,539:INFO:       statsforecast: Not installed
2023-11-17 12:36:39,540:INFO:        tune_sklearn: Not installed
2023-11-17 12:36:39,540:INFO:                 ray: Not installed
2023-11-17 12:36:39,540:INFO:            hyperopt: Not installed
2023-11-17 12:36:39,540:INFO:              optuna: Not installed
2023-11-17 12:36:39,540:INFO:               skopt: Not installed
2023-11-17 12:36:39,540:INFO:              mlflow: Not installed
2023-11-17 12:36:39,540:INFO:              gradio: Not installed
2023-11-17 12:36:39,540:INFO:             fastapi: Not installed
2023-11-17 12:36:39,540:INFO:             uvicorn: Not installed
2023-11-17 12:36:39,540:INFO:              m2cgen: Not installed
2023-11-17 12:36:39,540:INFO:           evidently: Not installed
2023-11-17 12:36:39,540:INFO:               fugue: Not installed
2023-11-17 12:36:39,540:INFO:           streamlit: Not installed
2023-11-17 12:36:39,540:INFO:             prophet: Not installed
2023-11-17 12:36:39,540:INFO:None
2023-11-17 12:36:39,540:INFO:Set up data.
2023-11-17 12:36:39,548:INFO:Set up folding strategy.
2023-11-17 12:36:39,548:INFO:Set up train/test split.
2023-11-17 12:36:39,551:INFO:Set up index.
2023-11-17 12:36:39,551:INFO:Assigning column types.
2023-11-17 12:36:39,553:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 12:36:39,582:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 12:36:39,582:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:36:39,601:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:36:39,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:36:39,631:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 12:36:39,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:36:39,649:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:36:39,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:36:39,651:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 12:36:39,680:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:36:39,697:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:36:39,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:36:39,728:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:36:39,745:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:36:39,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:36:39,747:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 12:36:39,793:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:36:39,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:36:39,839:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:36:39,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:36:39,883:INFO:Preparing preprocessing pipeline...
2023-11-17 12:36:39,884:INFO:Set up label encoding.
2023-11-17 12:36:39,884:INFO:Set up simple imputation.
2023-11-17 12:36:39,884:INFO:Set up column name cleaning.
2023-11-17 12:36:39,900:INFO:Finished creating preprocessing pipeline.
2023-11-17 12:36:39,904:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 12:36:39,904:INFO:Creating final display dataframe.
2023-11-17 12:36:39,956:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              ae69
2023-11-17 12:36:40,011:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:36:40,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:36:40,059:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:36:40,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:36:40,061:INFO:setup() successfully completed in 0.56s...............
2023-11-17 12:36:41,099:INFO:Initializing create_model()
2023-11-17 12:36:41,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7efd0fd3f8e0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 12:36:41,100:INFO:Checking exceptions
2023-11-17 12:36:41,110:INFO:Importing libraries
2023-11-17 12:36:41,110:INFO:Copying training dataset
2023-11-17 12:36:41,113:INFO:Defining folds
2023-11-17 12:36:41,113:INFO:Declaring metric variables
2023-11-17 12:36:41,116:INFO:Importing untrained model
2023-11-17 12:36:41,118:INFO:Extra Trees Classifier Imported successfully
2023-11-17 12:36:41,124:INFO:Starting cross validation
2023-11-17 12:36:41,125:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 12:36:42,334:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,336:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,338:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,343:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,346:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,349:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,395:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,397:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,399:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,406:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,408:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,410:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,558:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,560:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,562:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,617:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,619:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,620:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,749:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,751:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,751:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,752:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,753:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,753:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,754:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,755:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,755:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,762:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,764:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,766:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:36:42,774:INFO:Calculating mean and std
2023-11-17 12:36:42,775:INFO:Creating metrics dataframe
2023-11-17 12:36:42,781:INFO:Finalizing model
2023-11-17 12:36:42,882:INFO:Uploading results into container
2023-11-17 12:36:42,883:INFO:Uploading model into container now
2023-11-17 12:36:42,888:INFO:_master_model_container: 1
2023-11-17 12:36:42,888:INFO:_display_container: 2
2023-11-17 12:36:42,889:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 12:36:42,889:INFO:create_model() successfully completed......................................
2023-11-17 12:36:45,607:ERROR:
'gradio' is a soft dependency and not included in the pycaret installation. Please run: `pip install gradio` to install.
Alternately, you can install this by running `pip install pycaret[mlops]`
NoneType: None
2023-11-17 12:37:50,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:37:50,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:37:50,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:37:50,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:37:51,669:INFO:PyCaret ClassificationExperiment
2023-11-17 12:37:51,669:INFO:Logging name: clf-default-name
2023-11-17 12:37:51,669:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 12:37:51,669:INFO:version 3.2.0
2023-11-17 12:37:51,669:INFO:Initializing setup()
2023-11-17 12:37:51,669:INFO:self.USI: 76a1
2023-11-17 12:37:51,669:INFO:self._variable_keys: {'X_test', 'idx', '_ml_usecase', 'gpu_n_jobs_param', 'target_param', 'pipeline', 'y', 'seed', '_available_plots', 'X', 'data', 'n_jobs_param', 'y_test', 'exp_name_log', 'gpu_param', 'X_train', 'logging_param', 'memory', 'fix_imbalance', 'html_param', 'fold_generator', 'fold_shuffle_param', 'USI', 'fold_groups_param', 'log_plots_param', 'is_multiclass', 'exp_id', 'y_train'}
2023-11-17 12:37:51,669:INFO:Checking environment
2023-11-17 12:37:51,669:INFO:python_version: 3.10.13
2023-11-17 12:37:51,669:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 12:37:51,669:INFO:machine: x86_64
2023-11-17 12:37:51,669:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 12:37:51,669:INFO:Memory: svmem(total=33436913664, available=29444550656, percent=11.9, used=3378978816, free=24518672384, active=1174614016, inactive=6823829504, buffers=193179648, cached=5346082816, shared=128471040, slab=546799616)
2023-11-17 12:37:51,670:INFO:Physical Core: 8
2023-11-17 12:37:51,670:INFO:Logical Core: 16
2023-11-17 12:37:51,670:INFO:Checking libraries
2023-11-17 12:37:51,670:INFO:System:
2023-11-17 12:37:51,670:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 12:37:51,670:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 12:37:51,670:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 12:37:51,670:INFO:PyCaret required dependencies:
2023-11-17 12:37:51,689:INFO:                 pip: 23.3
2023-11-17 12:37:51,689:INFO:          setuptools: 68.0.0
2023-11-17 12:37:51,689:INFO:             pycaret: 3.2.0
2023-11-17 12:37:51,689:INFO:             IPython: 8.17.2
2023-11-17 12:37:51,689:INFO:          ipywidgets: 8.1.1
2023-11-17 12:37:51,689:INFO:                tqdm: 4.66.1
2023-11-17 12:37:51,689:INFO:               numpy: 1.24.4
2023-11-17 12:37:51,689:INFO:              pandas: 1.5.3
2023-11-17 12:37:51,689:INFO:              jinja2: 3.1.2
2023-11-17 12:37:51,689:INFO:               scipy: 1.10.1
2023-11-17 12:37:51,689:INFO:              joblib: 1.3.2
2023-11-17 12:37:51,689:INFO:             sklearn: 1.2.2
2023-11-17 12:37:51,689:INFO:                pyod: 1.1.1
2023-11-17 12:37:51,689:INFO:            imblearn: 0.11.0
2023-11-17 12:37:51,689:INFO:   category_encoders: 2.6.3
2023-11-17 12:37:51,689:INFO:            lightgbm: 4.1.0
2023-11-17 12:37:51,689:INFO:               numba: 0.58.1
2023-11-17 12:37:51,689:INFO:            requests: 2.31.0
2023-11-17 12:37:51,689:INFO:          matplotlib: 3.6.0
2023-11-17 12:37:51,689:INFO:          scikitplot: 0.3.7
2023-11-17 12:37:51,689:INFO:         yellowbrick: 1.5
2023-11-17 12:37:51,689:INFO:              plotly: 5.18.0
2023-11-17 12:37:51,689:INFO:    plotly-resampler: Not installed
2023-11-17 12:37:51,689:INFO:             kaleido: 0.2.1
2023-11-17 12:37:51,689:INFO:           schemdraw: 0.15
2023-11-17 12:37:51,689:INFO:         statsmodels: 0.14.0
2023-11-17 12:37:51,689:INFO:              sktime: 0.21.1
2023-11-17 12:37:51,689:INFO:               tbats: 1.1.3
2023-11-17 12:37:51,689:INFO:            pmdarima: 2.0.4
2023-11-17 12:37:51,689:INFO:              psutil: 5.9.0
2023-11-17 12:37:51,689:INFO:          markupsafe: 2.1.3
2023-11-17 12:37:51,689:INFO:             pickle5: Not installed
2023-11-17 12:37:51,689:INFO:         cloudpickle: 3.0.0
2023-11-17 12:37:51,689:INFO:         deprecation: 2.1.0
2023-11-17 12:37:51,689:INFO:              xxhash: 3.4.1
2023-11-17 12:37:51,689:INFO:           wurlitzer: 3.0.3
2023-11-17 12:37:51,689:INFO:PyCaret optional dependencies:
2023-11-17 12:37:51,708:INFO:                shap: 0.43.0
2023-11-17 12:37:51,708:INFO:           interpret: 0.4.4
2023-11-17 12:37:51,708:INFO:                umap: 0.5.4
2023-11-17 12:37:51,708:INFO:     ydata_profiling: 4.6.1
2023-11-17 12:37:51,708:INFO:  explainerdashboard: 0.4.3
2023-11-17 12:37:51,708:INFO:             autoviz: 0.1.732
2023-11-17 12:37:51,708:INFO:           fairlearn: 0.7.0
2023-11-17 12:37:51,708:INFO:          deepchecks: Not installed
2023-11-17 12:37:51,708:INFO:             xgboost: 2.0.2
2023-11-17 12:37:51,708:INFO:            catboost: Not installed
2023-11-17 12:37:51,708:INFO:              kmodes: Not installed
2023-11-17 12:37:51,708:INFO:             mlxtend: Not installed
2023-11-17 12:37:51,708:INFO:       statsforecast: Not installed
2023-11-17 12:37:51,708:INFO:        tune_sklearn: Not installed
2023-11-17 12:37:51,708:INFO:                 ray: Not installed
2023-11-17 12:37:51,708:INFO:            hyperopt: Not installed
2023-11-17 12:37:51,708:INFO:              optuna: Not installed
2023-11-17 12:37:51,708:INFO:               skopt: Not installed
2023-11-17 12:37:51,708:INFO:              mlflow: Not installed
2023-11-17 12:37:51,708:INFO:              gradio: Not installed
2023-11-17 12:37:51,708:INFO:             fastapi: Not installed
2023-11-17 12:37:51,708:INFO:             uvicorn: Not installed
2023-11-17 12:37:51,708:INFO:              m2cgen: Not installed
2023-11-17 12:37:51,708:INFO:           evidently: Not installed
2023-11-17 12:37:51,708:INFO:               fugue: Not installed
2023-11-17 12:37:51,708:INFO:           streamlit: Not installed
2023-11-17 12:37:51,708:INFO:             prophet: Not installed
2023-11-17 12:37:51,708:INFO:None
2023-11-17 12:37:51,708:INFO:Set up data.
2023-11-17 12:37:51,716:INFO:Set up folding strategy.
2023-11-17 12:37:51,717:INFO:Set up train/test split.
2023-11-17 12:37:51,719:INFO:Set up index.
2023-11-17 12:37:51,719:INFO:Assigning column types.
2023-11-17 12:37:51,722:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 12:37:51,748:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 12:37:51,749:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:37:51,767:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:37:51,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:37:51,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 12:37:51,796:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:37:51,812:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:37:51,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:37:51,814:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 12:37:51,840:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:37:51,857:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:37:51,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:37:51,886:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:37:51,902:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:37:51,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:37:51,903:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 12:37:51,988:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:37:51,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:37:52,032:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:37:52,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:37:52,034:INFO:Preparing preprocessing pipeline...
2023-11-17 12:37:52,035:INFO:Set up label encoding.
2023-11-17 12:37:52,035:INFO:Set up simple imputation.
2023-11-17 12:37:52,035:INFO:Set up column name cleaning.
2023-11-17 12:37:52,051:INFO:Finished creating preprocessing pipeline.
2023-11-17 12:37:52,054:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 12:37:52,054:INFO:Creating final display dataframe.
2023-11-17 12:37:52,105:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              76a1
2023-11-17 12:37:52,155:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:37:52,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:37:52,200:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:37:52,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:37:52,202:INFO:setup() successfully completed in 0.53s...............
2023-11-17 12:37:52,643:INFO:Initializing create_model()
2023-11-17 12:37:52,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f5aa7752350>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 12:37:52,644:INFO:Checking exceptions
2023-11-17 12:37:52,655:INFO:Importing libraries
2023-11-17 12:37:52,655:INFO:Copying training dataset
2023-11-17 12:37:52,658:INFO:Defining folds
2023-11-17 12:37:52,658:INFO:Declaring metric variables
2023-11-17 12:37:52,661:INFO:Importing untrained model
2023-11-17 12:37:52,663:INFO:Extra Trees Classifier Imported successfully
2023-11-17 12:37:52,667:INFO:Starting cross validation
2023-11-17 12:37:52,668:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 12:37:53,875:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,878:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,881:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,900:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,903:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,905:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,912:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,914:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,916:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,917:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,918:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,918:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,920:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,921:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,924:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,956:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,958:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:53,960:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,174:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,176:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,178:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,211:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,213:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,214:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,243:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,245:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,246:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,252:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,253:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,255:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:37:54,263:INFO:Calculating mean and std
2023-11-17 12:37:54,265:INFO:Creating metrics dataframe
2023-11-17 12:37:54,271:INFO:Finalizing model
2023-11-17 12:37:54,373:INFO:Uploading results into container
2023-11-17 12:37:54,373:INFO:Uploading model into container now
2023-11-17 12:37:54,379:INFO:_master_model_container: 1
2023-11-17 12:37:54,379:INFO:_display_container: 2
2023-11-17 12:37:54,379:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 12:37:54,379:INFO:create_model() successfully completed......................................
2023-11-17 12:38:08,537:ERROR:
'gradio' is a soft dependency and not included in the pycaret installation. Please run: `pip install gradio` to install.
Alternately, you can install this by running `pip install pycaret[mlops]`
NoneType: None
2023-11-17 12:40:11,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:40:11,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:40:11,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:40:11,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:40:12,104:INFO:PyCaret ClassificationExperiment
2023-11-17 12:40:12,104:INFO:Logging name: clf-default-name
2023-11-17 12:40:12,104:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 12:40:12,104:INFO:version 3.2.0
2023-11-17 12:40:12,104:INFO:Initializing setup()
2023-11-17 12:40:12,104:INFO:self.USI: 9c10
2023-11-17 12:40:12,104:INFO:self._variable_keys: {'data', 'idx', 'y_train', '_available_plots', 'seed', 'memory', 'fold_generator', 'X_train', 'pipeline', 'fold_groups_param', 'html_param', 'X', 'X_test', 'exp_name_log', '_ml_usecase', 'USI', 'exp_id', 'n_jobs_param', 'log_plots_param', 'logging_param', 'gpu_n_jobs_param', 'y_test', 'gpu_param', 'target_param', 'fold_shuffle_param', 'fix_imbalance', 'is_multiclass', 'y'}
2023-11-17 12:40:12,104:INFO:Checking environment
2023-11-17 12:40:12,104:INFO:python_version: 3.10.13
2023-11-17 12:40:12,104:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 12:40:12,104:INFO:machine: x86_64
2023-11-17 12:40:12,104:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 12:40:12,104:INFO:Memory: svmem(total=33436913664, available=29430706176, percent=12.0, used=3402240000, free=24103260160, active=1203355648, inactive=7171706880, buffers=214315008, cached=5717098496, shared=119050240, slab=571883520)
2023-11-17 12:40:12,105:INFO:Physical Core: 8
2023-11-17 12:40:12,105:INFO:Logical Core: 16
2023-11-17 12:40:12,105:INFO:Checking libraries
2023-11-17 12:40:12,105:INFO:System:
2023-11-17 12:40:12,105:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 12:40:12,105:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 12:40:12,105:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 12:40:12,105:INFO:PyCaret required dependencies:
2023-11-17 12:40:12,124:INFO:                 pip: 23.3
2023-11-17 12:40:12,124:INFO:          setuptools: 68.0.0
2023-11-17 12:40:12,124:INFO:             pycaret: 3.2.0
2023-11-17 12:40:12,124:INFO:             IPython: 8.17.2
2023-11-17 12:40:12,124:INFO:          ipywidgets: 8.1.1
2023-11-17 12:40:12,124:INFO:                tqdm: 4.66.1
2023-11-17 12:40:12,124:INFO:               numpy: 1.24.4
2023-11-17 12:40:12,124:INFO:              pandas: 1.5.3
2023-11-17 12:40:12,124:INFO:              jinja2: 3.1.2
2023-11-17 12:40:12,124:INFO:               scipy: 1.10.1
2023-11-17 12:40:12,124:INFO:              joblib: 1.3.2
2023-11-17 12:40:12,124:INFO:             sklearn: 1.2.2
2023-11-17 12:40:12,124:INFO:                pyod: 1.1.1
2023-11-17 12:40:12,124:INFO:            imblearn: 0.11.0
2023-11-17 12:40:12,124:INFO:   category_encoders: 2.6.3
2023-11-17 12:40:12,124:INFO:            lightgbm: 4.1.0
2023-11-17 12:40:12,124:INFO:               numba: 0.58.1
2023-11-17 12:40:12,124:INFO:            requests: 2.31.0
2023-11-17 12:40:12,124:INFO:          matplotlib: 3.6.0
2023-11-17 12:40:12,124:INFO:          scikitplot: 0.3.7
2023-11-17 12:40:12,124:INFO:         yellowbrick: 1.5
2023-11-17 12:40:12,124:INFO:              plotly: 5.18.0
2023-11-17 12:40:12,124:INFO:    plotly-resampler: Not installed
2023-11-17 12:40:12,124:INFO:             kaleido: 0.2.1
2023-11-17 12:40:12,124:INFO:           schemdraw: 0.15
2023-11-17 12:40:12,124:INFO:         statsmodels: 0.14.0
2023-11-17 12:40:12,125:INFO:              sktime: 0.21.1
2023-11-17 12:40:12,125:INFO:               tbats: 1.1.3
2023-11-17 12:40:12,125:INFO:            pmdarima: 2.0.4
2023-11-17 12:40:12,125:INFO:              psutil: 5.9.0
2023-11-17 12:40:12,125:INFO:          markupsafe: 2.1.3
2023-11-17 12:40:12,125:INFO:             pickle5: Not installed
2023-11-17 12:40:12,125:INFO:         cloudpickle: 2.2.1
2023-11-17 12:40:12,125:INFO:         deprecation: 2.1.0
2023-11-17 12:40:12,125:INFO:              xxhash: 3.4.1
2023-11-17 12:40:12,125:INFO:           wurlitzer: 3.0.3
2023-11-17 12:40:12,125:INFO:PyCaret optional dependencies:
2023-11-17 12:40:12,532:INFO:                shap: 0.43.0
2023-11-17 12:40:12,533:INFO:           interpret: 0.4.4
2023-11-17 12:40:12,533:INFO:                umap: 0.5.4
2023-11-17 12:40:12,533:INFO:     ydata_profiling: 4.6.1
2023-11-17 12:40:12,533:INFO:  explainerdashboard: 0.4.3
2023-11-17 12:40:12,533:INFO:             autoviz: 0.1.732
2023-11-17 12:40:12,533:INFO:           fairlearn: 0.7.0
2023-11-17 12:40:12,533:INFO:          deepchecks: Not installed
2023-11-17 12:40:12,533:INFO:             xgboost: 2.0.2
2023-11-17 12:40:12,533:INFO:            catboost: Not installed
2023-11-17 12:40:12,533:INFO:              kmodes: Not installed
2023-11-17 12:40:12,533:INFO:             mlxtend: Not installed
2023-11-17 12:40:12,533:INFO:       statsforecast: Not installed
2023-11-17 12:40:12,533:INFO:        tune_sklearn: Not installed
2023-11-17 12:40:12,533:INFO:                 ray: Not installed
2023-11-17 12:40:12,533:INFO:            hyperopt: Not installed
2023-11-17 12:40:12,533:INFO:              optuna: Not installed
2023-11-17 12:40:12,533:INFO:               skopt: Not installed
2023-11-17 12:40:12,533:INFO:              mlflow: 1.30.1
2023-11-17 12:40:12,533:INFO:              gradio: 3.50.2
2023-11-17 12:40:12,533:INFO:             fastapi: 0.104.1
2023-11-17 12:40:12,533:INFO:             uvicorn: 0.24.0.post1
2023-11-17 12:40:12,533:INFO:              m2cgen: 0.10.0
2023-11-17 12:40:12,533:INFO:           evidently: 0.2.8
2023-11-17 12:40:12,533:INFO:               fugue: Not installed
2023-11-17 12:40:12,533:INFO:           streamlit: Not installed
2023-11-17 12:40:12,533:INFO:             prophet: Not installed
2023-11-17 12:40:12,533:INFO:None
2023-11-17 12:40:12,533:INFO:Set up data.
2023-11-17 12:40:12,541:INFO:Set up folding strategy.
2023-11-17 12:40:12,542:INFO:Set up train/test split.
2023-11-17 12:40:12,544:INFO:Set up index.
2023-11-17 12:40:12,544:INFO:Assigning column types.
2023-11-17 12:40:12,547:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 12:40:12,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 12:40:12,574:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:40:12,593:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:40:12,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:40:12,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 12:40:12,622:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:40:12,639:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:40:12,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:40:12,640:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 12:40:12,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:40:12,683:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:40:12,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:40:12,712:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 12:40:12,729:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:40:12,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:40:12,731:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 12:40:12,773:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:40:12,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:40:12,816:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:40:12,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:40:12,819:INFO:Preparing preprocessing pipeline...
2023-11-17 12:40:12,819:INFO:Set up label encoding.
2023-11-17 12:40:12,819:INFO:Set up simple imputation.
2023-11-17 12:40:12,820:INFO:Set up column name cleaning.
2023-11-17 12:40:12,835:INFO:Finished creating preprocessing pipeline.
2023-11-17 12:40:12,839:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 12:40:12,839:INFO:Creating final display dataframe.
2023-11-17 12:40:12,890:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              9c10
2023-11-17 12:40:12,944:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:40:12,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:40:12,988:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 12:40:12,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 12:40:12,990:INFO:setup() successfully completed in 0.89s...............
2023-11-17 12:40:12,995:INFO:Initializing create_model()
2023-11-17 12:40:12,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9ccfa49a50>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 12:40:12,995:INFO:Checking exceptions
2023-11-17 12:40:13,009:INFO:Importing libraries
2023-11-17 12:40:13,009:INFO:Copying training dataset
2023-11-17 12:40:13,013:INFO:Defining folds
2023-11-17 12:40:13,013:INFO:Declaring metric variables
2023-11-17 12:40:13,016:INFO:Importing untrained model
2023-11-17 12:40:13,019:INFO:Extra Trees Classifier Imported successfully
2023-11-17 12:40:13,025:INFO:Starting cross validation
2023-11-17 12:40:13,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 12:40:14,223:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,226:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,229:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,229:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,231:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,234:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,259:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,261:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,263:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,297:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,300:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,300:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,301:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,302:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,304:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,312:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,315:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,317:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,570:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,572:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,574:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,584:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,586:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,587:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,610:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,610:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,612:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,612:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,613:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,614:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 12:40:14,621:INFO:Calculating mean and std
2023-11-17 12:40:14,622:INFO:Creating metrics dataframe
2023-11-17 12:40:14,627:INFO:Finalizing model
2023-11-17 12:40:14,729:INFO:Uploading results into container
2023-11-17 12:40:14,730:INFO:Uploading model into container now
2023-11-17 12:40:14,736:INFO:_master_model_container: 1
2023-11-17 12:40:14,736:INFO:_display_container: 2
2023-11-17 12:40:14,736:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 12:40:14,736:INFO:create_model() successfully completed......................................
2023-11-17 12:40:17,425:INFO:Soft dependency imported: gradio: 3.50.2
2023-11-17 12:40:17,427:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:5447: GradioDeprecationWarning: Usage of gradio.inputs is deprecated, and will not be supported in the future, please import your component from gradio.components
  all_inputs.append(gr.inputs.Textbox(label=i))

2023-11-17 12:40:17,427:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:5447: GradioDeprecationWarning: `optional` parameter is deprecated, and it has no effect
  all_inputs.append(gr.inputs.Textbox(label=i))

2023-11-17 12:40:17,427:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:5447: GradioDeprecationWarning: `numeric` parameter is deprecated, and it has no effect
  all_inputs.append(gr.inputs.Textbox(label=i))

2023-11-17 12:40:46,604:INFO:Initializing predict_model()
2023-11-17 12:40:46,604:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9ccfa49a50>, estimator=ExtraTreesClassifier(n_jobs=-1, random_state=1), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f9c448b6830>)
2023-11-17 12:40:46,604:INFO:Checking exceptions
2023-11-17 12:40:46,604:INFO:Preloading libraries
2023-11-17 12:40:46,605:INFO:Set up data.
2023-11-17 12:40:46,615:INFO:Set up index.
2023-11-17 12:42:29,011:INFO:Soft dependency imported: fastapi: 0.104.1
2023-11-17 12:42:29,011:INFO:Soft dependency imported: uvicorn: 0.24.0.post1
2023-11-17 12:42:29,012:INFO:Soft dependency imported: pydantic: 1.10.13
2023-11-17 12:42:29,016:INFO:Initializing save_model()
2023-11-17 12:42:29,016:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), model_name=ml_api, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-17 12:42:29,016:INFO:Adding model into prep_pipe
2023-11-17 12:42:29,050:INFO:ml_api.pkl saved in current working directory
2023-11-17 12:42:29,054:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave points_mean',
                                             's...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=1,
                                      verbose=0, warm_start=False))],
         verbose=False)
2023-11-17 12:42:29,054:INFO:save_model() successfully completed......................................
2023-11-17 12:50:42,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:50:42,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:50:42,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:50:42,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 12:50:43,442:INFO:Initializing load_model()
2023-11-17 12:50:43,442:INFO:load_model(model_name=ml_api, platform=None, authentication=None, verbose=True)
2023-11-17 12:51:09,571:INFO:Initializing predict_model()
2023-11-17 12:51:09,571:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcce9baf160>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave points_mean',
                                             'symmetry_mean',
                                             'fractal_dimension_mean',...
                                             'compactness_worst',
                                             'concavity_worst',
                                             'concave points_worst',
                                             'symmetry_worst', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fcce9b98670>)
2023-11-17 12:51:09,571:INFO:Checking exceptions
2023-11-17 12:51:09,571:INFO:Preloading libraries
2023-11-17 12:51:09,571:INFO:Set up data.
2023-11-17 12:51:09,578:INFO:Set up index.
2023-11-17 12:51:57,482:INFO:Initializing predict_model()
2023-11-17 12:51:57,482:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcce9b47760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave points_mean',
                                             'symmetry_mean',
                                             'fractal_dimension_mean',...
                                             'compactness_worst',
                                             'concavity_worst',
                                             'concave points_worst',
                                             'symmetry_worst', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fcce9b53eb0>)
2023-11-17 12:51:57,482:INFO:Checking exceptions
2023-11-17 12:51:57,482:INFO:Preloading libraries
2023-11-17 12:51:57,483:INFO:Set up data.
2023-11-17 12:51:57,489:INFO:Set up index.
2023-11-17 15:23:39,678:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 15:23:39,678:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 15:23:39,678:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 15:23:39,678:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 15:23:40,414:INFO:Initializing load_model()
2023-11-17 15:23:40,414:INFO:load_model(model_name=ml_api, platform=None, authentication=None, verbose=True)
2023-11-17 15:24:06,409:INFO:Initializing predict_model()
2023-11-17 15:24:06,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe5aaf72d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave points_mean',
                                             'symmetry_mean',
                                             'fractal_dimension_mean',...
                                             'compactness_worst',
                                             'concavity_worst',
                                             'concave points_worst',
                                             'symmetry_worst', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fe5aaf5c5e0>)
2023-11-17 15:24:06,409:INFO:Checking exceptions
2023-11-17 15:24:06,409:INFO:Preloading libraries
2023-11-17 15:24:06,410:INFO:Set up data.
2023-11-17 15:24:06,417:INFO:Set up index.
2023-11-17 15:35:36,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 15:35:36,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 15:35:36,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 15:35:36,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 15:56:47,880:INFO:PyCaret ClassificationExperiment
2023-11-17 15:56:47,880:INFO:Logging name: clf-default-name
2023-11-17 15:56:47,880:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 15:56:47,881:INFO:version 3.2.0
2023-11-17 15:56:47,881:INFO:Initializing setup()
2023-11-17 15:56:47,881:INFO:self.USI: 0e53
2023-11-17 15:56:47,881:INFO:self._variable_keys: {'fold_groups_param', 'is_multiclass', 'pipeline', '_ml_usecase', 'X_train', 'html_param', 'X', 'fold_generator', 'data', 'gpu_param', 'logging_param', 'y_test', 'fold_shuffle_param', 'fix_imbalance', 'target_param', 'exp_name_log', 'memory', 'n_jobs_param', 'log_plots_param', 'X_test', '_available_plots', 'exp_id', 'gpu_n_jobs_param', 'USI', 'y_train', 'y', 'seed', 'idx'}
2023-11-17 15:56:47,881:INFO:Checking environment
2023-11-17 15:56:47,881:INFO:python_version: 3.10.13
2023-11-17 15:56:47,881:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 15:56:47,881:INFO:machine: x86_64
2023-11-17 15:56:47,881:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 15:56:47,881:INFO:Memory: svmem(total=33436917760, available=27375648768, percent=18.1, used=5437235200, free=24412647424, active=1376423936, inactive=6643277824, buffers=206901248, cached=3380133888, shared=139116544, slab=508780544)
2023-11-17 15:56:47,881:INFO:Physical Core: 8
2023-11-17 15:56:47,881:INFO:Logical Core: 16
2023-11-17 15:56:47,881:INFO:Checking libraries
2023-11-17 15:56:47,881:INFO:System:
2023-11-17 15:56:47,881:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 15:56:47,882:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 15:56:47,882:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 15:56:47,882:INFO:PyCaret required dependencies:
2023-11-17 15:56:47,901:INFO:                 pip: 23.3
2023-11-17 15:56:47,901:INFO:          setuptools: 68.0.0
2023-11-17 15:56:47,901:INFO:             pycaret: 3.2.0
2023-11-17 15:56:47,901:INFO:             IPython: 8.17.2
2023-11-17 15:56:47,901:INFO:          ipywidgets: 8.1.1
2023-11-17 15:56:47,901:INFO:                tqdm: 4.66.1
2023-11-17 15:56:47,901:INFO:               numpy: 1.24.4
2023-11-17 15:56:47,901:INFO:              pandas: 1.5.3
2023-11-17 15:56:47,901:INFO:              jinja2: 3.1.2
2023-11-17 15:56:47,901:INFO:               scipy: 1.10.1
2023-11-17 15:56:47,901:INFO:              joblib: 1.3.2
2023-11-17 15:56:47,901:INFO:             sklearn: 1.2.2
2023-11-17 15:56:47,901:INFO:                pyod: 1.1.1
2023-11-17 15:56:47,901:INFO:            imblearn: 0.11.0
2023-11-17 15:56:47,901:INFO:   category_encoders: 2.6.3
2023-11-17 15:56:47,901:INFO:            lightgbm: 4.1.0
2023-11-17 15:56:47,901:INFO:               numba: 0.58.1
2023-11-17 15:56:47,901:INFO:            requests: 2.31.0
2023-11-17 15:56:47,901:INFO:          matplotlib: 3.6.0
2023-11-17 15:56:47,901:INFO:          scikitplot: 0.3.7
2023-11-17 15:56:47,901:INFO:         yellowbrick: 1.5
2023-11-17 15:56:47,901:INFO:              plotly: 5.18.0
2023-11-17 15:56:47,902:INFO:    plotly-resampler: Not installed
2023-11-17 15:56:47,902:INFO:             kaleido: 0.2.1
2023-11-17 15:56:47,902:INFO:           schemdraw: 0.15
2023-11-17 15:56:47,902:INFO:         statsmodels: 0.14.0
2023-11-17 15:56:47,902:INFO:              sktime: 0.21.1
2023-11-17 15:56:47,902:INFO:               tbats: 1.1.3
2023-11-17 15:56:47,902:INFO:            pmdarima: 2.0.4
2023-11-17 15:56:47,902:INFO:              psutil: 5.9.0
2023-11-17 15:56:47,902:INFO:          markupsafe: 2.1.3
2023-11-17 15:56:47,902:INFO:             pickle5: Not installed
2023-11-17 15:56:47,902:INFO:         cloudpickle: 2.2.1
2023-11-17 15:56:47,902:INFO:         deprecation: 2.1.0
2023-11-17 15:56:47,902:INFO:              xxhash: 3.4.1
2023-11-17 15:56:47,902:INFO:           wurlitzer: 3.0.3
2023-11-17 15:56:47,902:INFO:PyCaret optional dependencies:
2023-11-17 15:56:48,383:INFO:                shap: 0.43.0
2023-11-17 15:56:48,383:INFO:           interpret: 0.4.4
2023-11-17 15:56:48,383:INFO:                umap: 0.5.4
2023-11-17 15:56:48,383:INFO:     ydata_profiling: 4.6.1
2023-11-17 15:56:48,383:INFO:  explainerdashboard: 0.4.3
2023-11-17 15:56:48,384:INFO:             autoviz: 0.1.732
2023-11-17 15:56:48,384:INFO:           fairlearn: 0.7.0
2023-11-17 15:56:48,384:INFO:          deepchecks: Not installed
2023-11-17 15:56:48,384:INFO:             xgboost: 2.0.2
2023-11-17 15:56:48,384:INFO:            catboost: Not installed
2023-11-17 15:56:48,384:INFO:              kmodes: Not installed
2023-11-17 15:56:48,384:INFO:             mlxtend: Not installed
2023-11-17 15:56:48,384:INFO:       statsforecast: Not installed
2023-11-17 15:56:48,384:INFO:        tune_sklearn: Not installed
2023-11-17 15:56:48,384:INFO:                 ray: Not installed
2023-11-17 15:56:48,384:INFO:            hyperopt: Not installed
2023-11-17 15:56:48,384:INFO:              optuna: Not installed
2023-11-17 15:56:48,384:INFO:               skopt: Not installed
2023-11-17 15:56:48,384:INFO:              mlflow: 1.30.1
2023-11-17 15:56:48,384:INFO:              gradio: 3.50.2
2023-11-17 15:56:48,384:INFO:             fastapi: 0.104.1
2023-11-17 15:56:48,384:INFO:             uvicorn: 0.24.0.post1
2023-11-17 15:56:48,384:INFO:              m2cgen: 0.10.0
2023-11-17 15:56:48,384:INFO:           evidently: 0.2.8
2023-11-17 15:56:48,384:INFO:               fugue: Not installed
2023-11-17 15:56:48,384:INFO:           streamlit: Not installed
2023-11-17 15:56:48,384:INFO:             prophet: Not installed
2023-11-17 15:56:48,384:INFO:None
2023-11-17 15:56:48,384:INFO:Set up data.
2023-11-17 15:56:48,392:INFO:Set up folding strategy.
2023-11-17 15:56:48,393:INFO:Set up train/test split.
2023-11-17 15:56:48,396:INFO:Set up index.
2023-11-17 15:56:48,396:INFO:Assigning column types.
2023-11-17 15:56:48,398:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 15:56:48,425:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 15:56:48,427:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 15:56:48,446:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 15:56:48,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 15:56:48,474:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 15:56:48,476:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 15:56:48,492:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 15:56:48,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 15:56:48,494:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 15:56:48,521:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 15:56:48,539:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 15:56:48,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 15:56:48,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 15:56:48,585:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 15:56:48,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 15:56:48,587:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 15:56:48,631:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 15:56:48,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 15:56:48,677:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 15:56:48,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 15:56:48,683:INFO:Preparing preprocessing pipeline...
2023-11-17 15:56:48,684:INFO:Set up label encoding.
2023-11-17 15:56:48,684:INFO:Set up simple imputation.
2023-11-17 15:56:48,684:INFO:Set up column name cleaning.
2023-11-17 15:56:48,702:INFO:Finished creating preprocessing pipeline.
2023-11-17 15:56:48,705:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 15:56:48,706:INFO:Creating final display dataframe.
2023-11-17 15:56:48,759:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              0e53
2023-11-17 15:56:48,808:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 15:56:48,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 15:56:48,855:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 15:56:48,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 15:56:48,857:INFO:setup() successfully completed in 0.98s...............
2023-11-17 16:06:09,980:INFO:gpu_param set to False
2023-11-17 16:06:10,030:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:06:10,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:06:10,078:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:06:10,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:09:05,100:INFO:Initializing compare_models()
2023-11-17 16:09:05,101:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-17 16:09:05,101:INFO:Checking exceptions
2023-11-17 16:09:05,105:INFO:Preparing display monitor
2023-11-17 16:09:05,126:INFO:Initializing Logistic Regression
2023-11-17 16:09:05,126:INFO:Total runtime is 1.5139579772949218e-06 minutes
2023-11-17 16:09:05,128:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:05,129:INFO:Initializing create_model()
2023-11-17 16:09:05,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:05,129:INFO:Checking exceptions
2023-11-17 16:09:05,129:INFO:Importing libraries
2023-11-17 16:09:05,129:INFO:Copying training dataset
2023-11-17 16:09:05,131:INFO:Defining folds
2023-11-17 16:09:05,131:INFO:Declaring metric variables
2023-11-17 16:09:05,134:INFO:Importing untrained model
2023-11-17 16:09:05,138:INFO:Logistic Regression Imported successfully
2023-11-17 16:09:05,145:INFO:Starting cross validation
2023-11-17 16:09:05,146:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:06,342:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,346:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,347:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,348:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,349:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,351:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,352:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,354:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,398:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,400:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,401:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,402:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,511:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,512:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,513:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,514:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,579:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,581:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,582:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,583:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,627:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,629:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,630:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,631:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,640:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,642:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,643:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,644:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,675:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,677:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,677:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,678:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,688:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,690:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,690:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,691:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,709:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,712:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,712:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:06,713:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,722:INFO:Calculating mean and std
2023-11-17 16:09:06,723:INFO:Creating metrics dataframe
2023-11-17 16:09:06,727:INFO:Uploading results into container
2023-11-17 16:09:06,728:INFO:Uploading model into container now
2023-11-17 16:09:06,728:INFO:_master_model_container: 1
2023-11-17 16:09:06,728:INFO:_display_container: 2
2023-11-17 16:09:06,729:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-17 16:09:06,729:INFO:create_model() successfully completed......................................
2023-11-17 16:09:06,805:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:06,805:INFO:Creating metrics dataframe
2023-11-17 16:09:06,812:INFO:Initializing K Neighbors Classifier
2023-11-17 16:09:06,812:INFO:Total runtime is 0.02809576988220215 minutes
2023-11-17 16:09:06,814:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:06,814:INFO:Initializing create_model()
2023-11-17 16:09:06,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:06,814:INFO:Checking exceptions
2023-11-17 16:09:06,814:INFO:Importing libraries
2023-11-17 16:09:06,814:INFO:Copying training dataset
2023-11-17 16:09:06,818:INFO:Defining folds
2023-11-17 16:09:06,818:INFO:Declaring metric variables
2023-11-17 16:09:06,821:INFO:Importing untrained model
2023-11-17 16:09:06,824:INFO:K Neighbors Classifier Imported successfully
2023-11-17 16:09:06,831:INFO:Starting cross validation
2023-11-17 16:09:06,832:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:06,891:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,893:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,895:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,900:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,900:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,900:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,903:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,903:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,903:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,906:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,906:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:06,906:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,723:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,724:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,725:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,726:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,727:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,728:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,728:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,730:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,732:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,738:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,740:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,742:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,743:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,745:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,748:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,758:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,761:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,763:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,769:INFO:Calculating mean and std
2023-11-17 16:09:07,769:INFO:Creating metrics dataframe
2023-11-17 16:09:07,773:INFO:Uploading results into container
2023-11-17 16:09:07,773:INFO:Uploading model into container now
2023-11-17 16:09:07,774:INFO:_master_model_container: 2
2023-11-17 16:09:07,774:INFO:_display_container: 2
2023-11-17 16:09:07,774:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-17 16:09:07,774:INFO:create_model() successfully completed......................................
2023-11-17 16:09:07,855:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:07,855:INFO:Creating metrics dataframe
2023-11-17 16:09:07,861:INFO:Initializing Naive Bayes
2023-11-17 16:09:07,861:INFO:Total runtime is 0.04559254248936971 minutes
2023-11-17 16:09:07,864:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:07,864:INFO:Initializing create_model()
2023-11-17 16:09:07,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:07,864:INFO:Checking exceptions
2023-11-17 16:09:07,864:INFO:Importing libraries
2023-11-17 16:09:07,864:INFO:Copying training dataset
2023-11-17 16:09:07,866:INFO:Defining folds
2023-11-17 16:09:07,866:INFO:Declaring metric variables
2023-11-17 16:09:07,869:INFO:Importing untrained model
2023-11-17 16:09:07,871:INFO:Naive Bayes Imported successfully
2023-11-17 16:09:07,875:INFO:Starting cross validation
2023-11-17 16:09:07,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:07,909:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,910:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,911:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,912:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,912:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,912:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,913:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,913:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:07,914:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,914:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,914:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,915:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,915:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,916:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:07,916:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,917:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,917:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,917:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,918:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,918:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,918:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:07,918:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,919:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,919:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:07,920:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,920:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,920:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:07,921:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,921:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,921:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,922:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,922:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:07,923:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,923:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,923:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,925:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:07,933:INFO:Calculating mean and std
2023-11-17 16:09:07,933:INFO:Creating metrics dataframe
2023-11-17 16:09:07,936:INFO:Uploading results into container
2023-11-17 16:09:07,936:INFO:Uploading model into container now
2023-11-17 16:09:07,937:INFO:_master_model_container: 3
2023-11-17 16:09:07,937:INFO:_display_container: 2
2023-11-17 16:09:07,937:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-17 16:09:07,937:INFO:create_model() successfully completed......................................
2023-11-17 16:09:08,003:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:08,003:INFO:Creating metrics dataframe
2023-11-17 16:09:08,009:INFO:Initializing Decision Tree Classifier
2023-11-17 16:09:08,010:INFO:Total runtime is 0.048060091336568196 minutes
2023-11-17 16:09:08,012:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:08,012:INFO:Initializing create_model()
2023-11-17 16:09:08,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:08,012:INFO:Checking exceptions
2023-11-17 16:09:08,012:INFO:Importing libraries
2023-11-17 16:09:08,012:INFO:Copying training dataset
2023-11-17 16:09:08,014:INFO:Defining folds
2023-11-17 16:09:08,014:INFO:Declaring metric variables
2023-11-17 16:09:08,016:INFO:Importing untrained model
2023-11-17 16:09:08,019:INFO:Decision Tree Classifier Imported successfully
2023-11-17 16:09:08,023:INFO:Starting cross validation
2023-11-17 16:09:08,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:08,055:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,057:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,058:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,059:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,059:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,060:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,060:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,060:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,061:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,061:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,061:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,062:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,063:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,063:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,063:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,064:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,065:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,066:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,066:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,066:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,066:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,067:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,068:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,068:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,069:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,069:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,070:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,071:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,071:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,072:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,080:INFO:Calculating mean and std
2023-11-17 16:09:08,081:INFO:Creating metrics dataframe
2023-11-17 16:09:08,084:INFO:Uploading results into container
2023-11-17 16:09:08,084:INFO:Uploading model into container now
2023-11-17 16:09:08,084:INFO:_master_model_container: 4
2023-11-17 16:09:08,084:INFO:_display_container: 2
2023-11-17 16:09:08,085:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1, splitter='best')
2023-11-17 16:09:08,085:INFO:create_model() successfully completed......................................
2023-11-17 16:09:08,149:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:08,149:INFO:Creating metrics dataframe
2023-11-17 16:09:08,155:INFO:Initializing SVM - Linear Kernel
2023-11-17 16:09:08,155:INFO:Total runtime is 0.050491146246592206 minutes
2023-11-17 16:09:08,157:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:08,158:INFO:Initializing create_model()
2023-11-17 16:09:08,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:08,158:INFO:Checking exceptions
2023-11-17 16:09:08,158:INFO:Importing libraries
2023-11-17 16:09:08,158:INFO:Copying training dataset
2023-11-17 16:09:08,161:INFO:Defining folds
2023-11-17 16:09:08,161:INFO:Declaring metric variables
2023-11-17 16:09:08,164:INFO:Importing untrained model
2023-11-17 16:09:08,167:INFO:SVM - Linear Kernel Imported successfully
2023-11-17 16:09:08,174:INFO:Starting cross validation
2023-11-17 16:09:08,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:08,205:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,205:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,206:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,206:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,207:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,208:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,208:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,208:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,209:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,209:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,210:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,210:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,210:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,211:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,211:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,212:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,212:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,212:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,213:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,213:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,213:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,213:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,213:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,214:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,214:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,215:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,215:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,215:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,215:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,215:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,215:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 16:09:08,216:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,216:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,216:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,217:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,217:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,217:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,218:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,218:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,218:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,219:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,219:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,219:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,220:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,220:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,220:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,221:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,221:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:09:08,221:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,222:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,234:INFO:Calculating mean and std
2023-11-17 16:09:08,235:INFO:Creating metrics dataframe
2023-11-17 16:09:08,238:INFO:Uploading results into container
2023-11-17 16:09:08,238:INFO:Uploading model into container now
2023-11-17 16:09:08,238:INFO:_master_model_container: 5
2023-11-17 16:09:08,238:INFO:_display_container: 2
2023-11-17 16:09:08,239:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-17 16:09:08,239:INFO:create_model() successfully completed......................................
2023-11-17 16:09:08,304:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:08,304:INFO:Creating metrics dataframe
2023-11-17 16:09:08,311:INFO:Initializing Ridge Classifier
2023-11-17 16:09:08,311:INFO:Total runtime is 0.05309167702992757 minutes
2023-11-17 16:09:08,316:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:08,316:INFO:Initializing create_model()
2023-11-17 16:09:08,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:08,316:INFO:Checking exceptions
2023-11-17 16:09:08,316:INFO:Importing libraries
2023-11-17 16:09:08,316:INFO:Copying training dataset
2023-11-17 16:09:08,319:INFO:Defining folds
2023-11-17 16:09:08,319:INFO:Declaring metric variables
2023-11-17 16:09:08,321:INFO:Importing untrained model
2023-11-17 16:09:08,324:INFO:Ridge Classifier Imported successfully
2023-11-17 16:09:08,329:INFO:Starting cross validation
2023-11-17 16:09:08,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:08,353:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51567e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,353:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.63565e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,353:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.9941e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,353:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51621e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,353:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51782e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,353:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.70338e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,353:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.71885e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,354:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.36603e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,355:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.97244e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,356:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51528e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-17 16:09:08,359:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,359:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,360:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,360:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,360:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,361:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,362:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,362:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,362:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,362:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,362:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,362:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,363:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,363:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,363:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,364:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,364:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,364:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,364:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,364:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,364:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,366:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,366:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,366:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-17 16:09:08,366:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,366:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,367:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,367:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,367:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,367:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,368:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,369:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,369:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,369:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,370:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,370:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,370:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,371:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,371:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,373:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,387:INFO:Calculating mean and std
2023-11-17 16:09:08,387:INFO:Creating metrics dataframe
2023-11-17 16:09:08,390:INFO:Uploading results into container
2023-11-17 16:09:08,390:INFO:Uploading model into container now
2023-11-17 16:09:08,391:INFO:_master_model_container: 6
2023-11-17 16:09:08,391:INFO:_display_container: 2
2023-11-17 16:09:08,391:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1, solver='auto',
                tol=0.0001)
2023-11-17 16:09:08,391:INFO:create_model() successfully completed......................................
2023-11-17 16:09:08,459:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:08,460:INFO:Creating metrics dataframe
2023-11-17 16:09:08,467:INFO:Initializing Random Forest Classifier
2023-11-17 16:09:08,467:INFO:Total runtime is 0.05569307804107666 minutes
2023-11-17 16:09:08,470:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:08,470:INFO:Initializing create_model()
2023-11-17 16:09:08,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:08,470:INFO:Checking exceptions
2023-11-17 16:09:08,470:INFO:Importing libraries
2023-11-17 16:09:08,470:INFO:Copying training dataset
2023-11-17 16:09:08,473:INFO:Defining folds
2023-11-17 16:09:08,473:INFO:Declaring metric variables
2023-11-17 16:09:08,475:INFO:Importing untrained model
2023-11-17 16:09:08,477:INFO:Random Forest Classifier Imported successfully
2023-11-17 16:09:08,482:INFO:Starting cross validation
2023-11-17 16:09:08,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:08,726:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,727:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,729:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,730:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,731:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,732:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,733:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,733:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,735:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,738:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,740:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,742:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,742:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,742:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,743:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,745:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,745:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,745:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,745:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,747:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,748:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,748:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,748:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,750:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,752:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,754:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,756:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,763:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,765:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,767:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,777:INFO:Calculating mean and std
2023-11-17 16:09:08,778:INFO:Creating metrics dataframe
2023-11-17 16:09:08,781:INFO:Uploading results into container
2023-11-17 16:09:08,781:INFO:Uploading model into container now
2023-11-17 16:09:08,782:INFO:_master_model_container: 7
2023-11-17 16:09:08,782:INFO:_display_container: 2
2023-11-17 16:09:08,782:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1, verbose=0, warm_start=False)
2023-11-17 16:09:08,782:INFO:create_model() successfully completed......................................
2023-11-17 16:09:08,854:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:08,854:INFO:Creating metrics dataframe
2023-11-17 16:09:08,862:INFO:Initializing Quadratic Discriminant Analysis
2023-11-17 16:09:08,863:INFO:Total runtime is 0.06227675278981527 minutes
2023-11-17 16:09:08,865:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:08,865:INFO:Initializing create_model()
2023-11-17 16:09:08,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:08,865:INFO:Checking exceptions
2023-11-17 16:09:08,865:INFO:Importing libraries
2023-11-17 16:09:08,865:INFO:Copying training dataset
2023-11-17 16:09:08,868:INFO:Defining folds
2023-11-17 16:09:08,868:INFO:Declaring metric variables
2023-11-17 16:09:08,870:INFO:Importing untrained model
2023-11-17 16:09:08,872:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-17 16:09:08,876:INFO:Starting cross validation
2023-11-17 16:09:08,877:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:08,912:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,912:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,912:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,913:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,914:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,914:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,914:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,915:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,916:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,916:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,916:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,916:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,916:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,916:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,917:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,918:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,919:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,919:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,919:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,919:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,919:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,919:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,921:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,922:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,922:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,922:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,922:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,922:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,923:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,925:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:08,934:INFO:Calculating mean and std
2023-11-17 16:09:08,935:INFO:Creating metrics dataframe
2023-11-17 16:09:08,938:INFO:Uploading results into container
2023-11-17 16:09:08,939:INFO:Uploading model into container now
2023-11-17 16:09:08,939:INFO:_master_model_container: 8
2023-11-17 16:09:08,939:INFO:_display_container: 2
2023-11-17 16:09:08,939:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-17 16:09:08,939:INFO:create_model() successfully completed......................................
2023-11-17 16:09:09,003:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:09,003:INFO:Creating metrics dataframe
2023-11-17 16:09:09,011:INFO:Initializing Ada Boost Classifier
2023-11-17 16:09:09,011:INFO:Total runtime is 0.06475115219751995 minutes
2023-11-17 16:09:09,013:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:09,013:INFO:Initializing create_model()
2023-11-17 16:09:09,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:09,013:INFO:Checking exceptions
2023-11-17 16:09:09,013:INFO:Importing libraries
2023-11-17 16:09:09,014:INFO:Copying training dataset
2023-11-17 16:09:09,016:INFO:Defining folds
2023-11-17 16:09:09,016:INFO:Declaring metric variables
2023-11-17 16:09:09,019:INFO:Importing untrained model
2023-11-17 16:09:09,021:INFO:Ada Boost Classifier Imported successfully
2023-11-17 16:09:09,026:INFO:Starting cross validation
2023-11-17 16:09:09,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:09,152:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,154:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,155:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,155:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,156:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,156:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,157:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,158:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,159:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,171:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,172:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,174:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,183:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,186:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,189:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,201:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,202:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,204:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,204:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,205:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,206:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,206:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,207:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,208:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,208:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,211:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,211:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,213:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,216:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,218:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,225:INFO:Calculating mean and std
2023-11-17 16:09:09,226:INFO:Creating metrics dataframe
2023-11-17 16:09:09,229:INFO:Uploading results into container
2023-11-17 16:09:09,229:INFO:Uploading model into container now
2023-11-17 16:09:09,229:INFO:_master_model_container: 9
2023-11-17 16:09:09,229:INFO:_display_container: 2
2023-11-17 16:09:09,230:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1)
2023-11-17 16:09:09,230:INFO:create_model() successfully completed......................................
2023-11-17 16:09:09,296:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:09,296:INFO:Creating metrics dataframe
2023-11-17 16:09:09,304:INFO:Initializing Gradient Boosting Classifier
2023-11-17 16:09:09,304:INFO:Total runtime is 0.06964120070139568 minutes
2023-11-17 16:09:09,307:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:09,307:INFO:Initializing create_model()
2023-11-17 16:09:09,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:09,307:INFO:Checking exceptions
2023-11-17 16:09:09,307:INFO:Importing libraries
2023-11-17 16:09:09,307:INFO:Copying training dataset
2023-11-17 16:09:09,310:INFO:Defining folds
2023-11-17 16:09:09,310:INFO:Declaring metric variables
2023-11-17 16:09:09,312:INFO:Importing untrained model
2023-11-17 16:09:09,315:INFO:Gradient Boosting Classifier Imported successfully
2023-11-17 16:09:09,320:INFO:Starting cross validation
2023-11-17 16:09:09,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:09,578:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,579:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,581:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,606:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,608:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,610:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,613:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,615:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,616:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,624:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,627:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,628:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,629:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,630:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,631:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,655:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,657:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,658:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,669:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,671:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,672:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,673:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,673:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,674:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,675:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,675:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,675:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,678:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,678:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,680:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,691:INFO:Calculating mean and std
2023-11-17 16:09:09,691:INFO:Creating metrics dataframe
2023-11-17 16:09:09,694:INFO:Uploading results into container
2023-11-17 16:09:09,694:INFO:Uploading model into container now
2023-11-17 16:09:09,694:INFO:_master_model_container: 10
2023-11-17 16:09:09,695:INFO:_display_container: 2
2023-11-17 16:09:09,695:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-17 16:09:09,695:INFO:create_model() successfully completed......................................
2023-11-17 16:09:09,761:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:09,761:INFO:Creating metrics dataframe
2023-11-17 16:09:09,769:INFO:Initializing Linear Discriminant Analysis
2023-11-17 16:09:09,769:INFO:Total runtime is 0.07739218870798747 minutes
2023-11-17 16:09:09,771:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:09,772:INFO:Initializing create_model()
2023-11-17 16:09:09,772:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:09,772:INFO:Checking exceptions
2023-11-17 16:09:09,772:INFO:Importing libraries
2023-11-17 16:09:09,772:INFO:Copying training dataset
2023-11-17 16:09:09,774:INFO:Defining folds
2023-11-17 16:09:09,774:INFO:Declaring metric variables
2023-11-17 16:09:09,776:INFO:Importing untrained model
2023-11-17 16:09:09,778:INFO:Linear Discriminant Analysis Imported successfully
2023-11-17 16:09:09,783:INFO:Starting cross validation
2023-11-17 16:09:09,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:09,814:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,815:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,816:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,818:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,818:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,818:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,819:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,820:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,821:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,821:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,821:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,822:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,822:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,823:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,823:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,824:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,824:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,825:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,825:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,826:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,826:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,826:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,827:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,828:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,828:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,829:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,829:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,830:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,831:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,833:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:09,841:INFO:Calculating mean and std
2023-11-17 16:09:09,841:INFO:Creating metrics dataframe
2023-11-17 16:09:09,844:INFO:Uploading results into container
2023-11-17 16:09:09,844:INFO:Uploading model into container now
2023-11-17 16:09:09,844:INFO:_master_model_container: 11
2023-11-17 16:09:09,844:INFO:_display_container: 2
2023-11-17 16:09:09,844:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-17 16:09:09,845:INFO:create_model() successfully completed......................................
2023-11-17 16:09:09,911:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:09,911:INFO:Creating metrics dataframe
2023-11-17 16:09:09,920:INFO:Initializing Extra Trees Classifier
2023-11-17 16:09:09,921:INFO:Total runtime is 0.07991047700246176 minutes
2023-11-17 16:09:09,923:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:09,923:INFO:Initializing create_model()
2023-11-17 16:09:09,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:09,923:INFO:Checking exceptions
2023-11-17 16:09:09,923:INFO:Importing libraries
2023-11-17 16:09:09,923:INFO:Copying training dataset
2023-11-17 16:09:09,927:INFO:Defining folds
2023-11-17 16:09:09,927:INFO:Declaring metric variables
2023-11-17 16:09:09,929:INFO:Importing untrained model
2023-11-17 16:09:09,931:INFO:Extra Trees Classifier Imported successfully
2023-11-17 16:09:09,936:INFO:Starting cross validation
2023-11-17 16:09:09,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:10,125:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,126:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,128:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,129:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,130:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,132:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,135:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,137:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,139:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,142:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,145:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,147:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,147:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,149:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,149:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,150:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,151:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,152:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,153:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,153:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,154:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,155:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,155:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,156:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,157:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,159:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,159:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,161:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,161:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,163:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,176:INFO:Calculating mean and std
2023-11-17 16:09:10,177:INFO:Creating metrics dataframe
2023-11-17 16:09:10,182:INFO:Uploading results into container
2023-11-17 16:09:10,183:INFO:Uploading model into container now
2023-11-17 16:09:10,183:INFO:_master_model_container: 12
2023-11-17 16:09:10,183:INFO:_display_container: 2
2023-11-17 16:09:10,183:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 16:09:10,184:INFO:create_model() successfully completed......................................
2023-11-17 16:09:10,252:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:10,253:INFO:Creating metrics dataframe
2023-11-17 16:09:10,262:INFO:Initializing Extreme Gradient Boosting
2023-11-17 16:09:10,262:INFO:Total runtime is 0.0856065034866333 minutes
2023-11-17 16:09:10,265:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:10,265:INFO:Initializing create_model()
2023-11-17 16:09:10,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:10,265:INFO:Checking exceptions
2023-11-17 16:09:10,265:INFO:Importing libraries
2023-11-17 16:09:10,265:INFO:Copying training dataset
2023-11-17 16:09:10,268:INFO:Defining folds
2023-11-17 16:09:10,268:INFO:Declaring metric variables
2023-11-17 16:09:10,270:INFO:Importing untrained model
2023-11-17 16:09:10,273:INFO:Extreme Gradient Boosting Imported successfully
2023-11-17 16:09:10,277:INFO:Starting cross validation
2023-11-17 16:09:10,278:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:09:10,386:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,386:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,388:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,388:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,389:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,390:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,390:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,391:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,392:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,396:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,397:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,399:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,400:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,403:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,406:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,414:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,415:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,416:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,416:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,416:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,416:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,418:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,418:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,418:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,418:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,419:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,421:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,421:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,421:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,421:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:09:10,427:INFO:Calculating mean and std
2023-11-17 16:09:10,428:INFO:Creating metrics dataframe
2023-11-17 16:09:10,431:INFO:Uploading results into container
2023-11-17 16:09:10,431:INFO:Uploading model into container now
2023-11-17 16:09:10,431:INFO:_master_model_container: 13
2023-11-17 16:09:10,431:INFO:_display_container: 2
2023-11-17 16:09:10,432:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-11-17 16:09:10,432:INFO:create_model() successfully completed......................................
2023-11-17 16:09:10,499:INFO:SubProcess create_model() end ==================================
2023-11-17 16:09:10,500:INFO:Creating metrics dataframe
2023-11-17 16:09:10,509:INFO:Initializing Light Gradient Boosting Machine
2023-11-17 16:09:10,509:INFO:Total runtime is 0.08971200386683147 minutes
2023-11-17 16:09:10,511:INFO:SubProcess create_model() called ==================================
2023-11-17 16:09:10,512:INFO:Initializing create_model()
2023-11-17 16:09:10,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:09:10,512:INFO:Checking exceptions
2023-11-17 16:09:10,512:INFO:Importing libraries
2023-11-17 16:09:10,512:INFO:Copying training dataset
2023-11-17 16:09:10,514:INFO:Defining folds
2023-11-17 16:09:10,514:INFO:Declaring metric variables
2023-11-17 16:09:10,516:INFO:Importing untrained model
2023-11-17 16:09:10,519:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-17 16:09:10,523:INFO:Starting cross validation
2023-11-17 16:09:10,524:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:22:14,119:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:14,146:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:14,178:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:25,191:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:25,218:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:25,234:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:26,112:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:26,130:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:26,154:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:35,743:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:35,769:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:35,771:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:37,027:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:37,046:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:37,048:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:39,695:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:39,710:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:39,712:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,038:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,040:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,041:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,621:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,623:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,625:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,625:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,627:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,629:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,669:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,671:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,673:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,683:INFO:Calculating mean and std
2023-11-17 16:22:42,684:INFO:Creating metrics dataframe
2023-11-17 16:22:42,687:INFO:Uploading results into container
2023-11-17 16:22:42,687:INFO:Uploading model into container now
2023-11-17 16:22:42,687:INFO:_master_model_container: 14
2023-11-17 16:22:42,687:INFO:_display_container: 2
2023-11-17 16:22:42,688:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-17 16:22:42,688:INFO:create_model() successfully completed......................................
2023-11-17 16:22:42,759:INFO:SubProcess create_model() end ==================================
2023-11-17 16:22:42,759:INFO:Creating metrics dataframe
2023-11-17 16:22:42,768:INFO:Initializing Dummy Classifier
2023-11-17 16:22:42,769:INFO:Total runtime is 13.627376488844552 minutes
2023-11-17 16:22:42,771:INFO:SubProcess create_model() called ==================================
2023-11-17 16:22:42,771:INFO:Initializing create_model()
2023-11-17 16:22:42,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2f519f7550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:22:42,771:INFO:Checking exceptions
2023-11-17 16:22:42,771:INFO:Importing libraries
2023-11-17 16:22:42,771:INFO:Copying training dataset
2023-11-17 16:22:42,774:INFO:Defining folds
2023-11-17 16:22:42,774:INFO:Declaring metric variables
2023-11-17 16:22:42,777:INFO:Importing untrained model
2023-11-17 16:22:42,779:INFO:Dummy Classifier Imported successfully
2023-11-17 16:22:42,783:INFO:Starting cross validation
2023-11-17 16:22:42,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:22:42,808:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,810:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,811:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,812:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,851:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,852:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,853:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,854:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,854:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,855:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,855:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,856:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,857:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,857:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,857:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,857:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,857:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,858:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,859:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,859:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,859:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,859:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,860:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,860:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,860:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,861:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,861:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,862:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,862:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,863:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,863:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,863:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,863:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,864:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,864:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,864:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,865:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,865:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 16:22:42,866:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,867:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:22:42,878:INFO:Calculating mean and std
2023-11-17 16:22:42,879:INFO:Creating metrics dataframe
2023-11-17 16:22:42,884:INFO:Uploading results into container
2023-11-17 16:22:42,885:INFO:Uploading model into container now
2023-11-17 16:22:42,885:INFO:_master_model_container: 15
2023-11-17 16:22:42,885:INFO:_display_container: 2
2023-11-17 16:22:42,885:INFO:DummyClassifier(constant=None, random_state=1, strategy='prior')
2023-11-17 16:22:42,886:INFO:create_model() successfully completed......................................
2023-11-17 16:22:42,964:INFO:SubProcess create_model() end ==================================
2023-11-17 16:22:42,964:INFO:Creating metrics dataframe
2023-11-17 16:22:42,979:INFO:Initializing create_model()
2023-11-17 16:22:42,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2f519f6800>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:22:42,979:INFO:Checking exceptions
2023-11-17 16:22:42,980:INFO:Importing libraries
2023-11-17 16:22:42,981:INFO:Copying training dataset
2023-11-17 16:22:42,983:INFO:Defining folds
2023-11-17 16:22:42,983:INFO:Declaring metric variables
2023-11-17 16:22:42,983:INFO:Importing untrained model
2023-11-17 16:22:42,983:INFO:Declaring custom model
2023-11-17 16:22:42,983:INFO:Extra Trees Classifier Imported successfully
2023-11-17 16:22:42,984:INFO:Cross validation set to False
2023-11-17 16:22:42,984:INFO:Fitting Model
2023-11-17 16:22:43,088:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 16:22:43,088:INFO:create_model() successfully completed......................................
2023-11-17 16:22:43,173:INFO:_master_model_container: 15
2023-11-17 16:22:43,174:INFO:_display_container: 2
2023-11-17 16:22:43,174:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 16:22:43,174:INFO:compare_models() successfully completed......................................
2023-11-17 16:24:57,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 16:24:57,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 16:24:57,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 16:24:57,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 16:24:58,845:INFO:PyCaret ClassificationExperiment
2023-11-17 16:24:58,845:INFO:Logging name: clf-default-name
2023-11-17 16:24:58,845:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 16:24:58,845:INFO:version 3.2.0
2023-11-17 16:24:58,845:INFO:Initializing setup()
2023-11-17 16:24:58,846:INFO:self.USI: 2cc0
2023-11-17 16:24:58,846:INFO:self._variable_keys: {'seed', 'USI', 'data', 'y_test', 'fold_shuffle_param', 'y', 'log_plots_param', 'memory', 'exp_name_log', 'target_param', 'pipeline', 'n_jobs_param', 'html_param', 'fix_imbalance', 'gpu_param', 'is_multiclass', 'fold_generator', 'fold_groups_param', 'exp_id', 'idx', 'gpu_n_jobs_param', 'y_train', 'logging_param', '_ml_usecase', 'X_test', 'X_train', 'X', '_available_plots'}
2023-11-17 16:24:58,846:INFO:Checking environment
2023-11-17 16:24:58,846:INFO:python_version: 3.10.13
2023-11-17 16:24:58,846:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2023-11-17 16:24:58,846:INFO:machine: x86_64
2023-11-17 16:24:58,846:INFO:platform: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 16:24:58,846:INFO:Memory: svmem(total=33436917760, available=25803919360, percent=22.8, used=7005630464, free=22779826176, active=1472040960, inactive=8121823232, buffers=217030656, cached=3434430464, shared=142426112, slab=525504512)
2023-11-17 16:24:58,846:INFO:Physical Core: 8
2023-11-17 16:24:58,846:INFO:Logical Core: 16
2023-11-17 16:24:58,846:INFO:Checking libraries
2023-11-17 16:24:58,847:INFO:System:
2023-11-17 16:24:58,847:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2023-11-17 16:24:58,847:INFO:executable: /home/amaldonado/miniconda3/envs/pycaret-env/bin/python
2023-11-17 16:24:58,847:INFO:   machine: Linux-6.2.0-36-generic-x86_64-with-glibc2.35
2023-11-17 16:24:58,847:INFO:PyCaret required dependencies:
2023-11-17 16:24:58,868:INFO:                 pip: 23.3
2023-11-17 16:24:58,868:INFO:          setuptools: 68.0.0
2023-11-17 16:24:58,868:INFO:             pycaret: 3.2.0
2023-11-17 16:24:58,868:INFO:             IPython: 8.17.2
2023-11-17 16:24:58,868:INFO:          ipywidgets: 8.1.1
2023-11-17 16:24:58,868:INFO:                tqdm: 4.66.1
2023-11-17 16:24:58,868:INFO:               numpy: 1.24.4
2023-11-17 16:24:58,868:INFO:              pandas: 1.5.3
2023-11-17 16:24:58,868:INFO:              jinja2: 3.1.2
2023-11-17 16:24:58,868:INFO:               scipy: 1.10.1
2023-11-17 16:24:58,868:INFO:              joblib: 1.3.2
2023-11-17 16:24:58,868:INFO:             sklearn: 1.2.2
2023-11-17 16:24:58,868:INFO:                pyod: 1.1.1
2023-11-17 16:24:58,868:INFO:            imblearn: 0.11.0
2023-11-17 16:24:58,868:INFO:   category_encoders: 2.6.3
2023-11-17 16:24:58,868:INFO:            lightgbm: 4.1.0
2023-11-17 16:24:58,868:INFO:               numba: 0.58.1
2023-11-17 16:24:58,868:INFO:            requests: 2.31.0
2023-11-17 16:24:58,868:INFO:          matplotlib: 3.6.0
2023-11-17 16:24:58,868:INFO:          scikitplot: 0.3.7
2023-11-17 16:24:58,869:INFO:         yellowbrick: 1.5
2023-11-17 16:24:58,869:INFO:              plotly: 5.18.0
2023-11-17 16:24:58,869:INFO:    plotly-resampler: Not installed
2023-11-17 16:24:58,869:INFO:             kaleido: 0.2.1
2023-11-17 16:24:58,869:INFO:           schemdraw: 0.15
2023-11-17 16:24:58,869:INFO:         statsmodels: 0.14.0
2023-11-17 16:24:58,869:INFO:              sktime: 0.21.1
2023-11-17 16:24:58,869:INFO:               tbats: 1.1.3
2023-11-17 16:24:58,869:INFO:            pmdarima: 2.0.4
2023-11-17 16:24:58,869:INFO:              psutil: 5.9.0
2023-11-17 16:24:58,869:INFO:          markupsafe: 2.1.3
2023-11-17 16:24:58,869:INFO:             pickle5: Not installed
2023-11-17 16:24:58,869:INFO:         cloudpickle: 2.2.1
2023-11-17 16:24:58,869:INFO:         deprecation: 2.1.0
2023-11-17 16:24:58,869:INFO:              xxhash: 3.4.1
2023-11-17 16:24:58,869:INFO:           wurlitzer: 3.0.3
2023-11-17 16:24:58,869:INFO:PyCaret optional dependencies:
2023-11-17 16:24:59,276:INFO:                shap: 0.43.0
2023-11-17 16:24:59,276:INFO:           interpret: 0.4.4
2023-11-17 16:24:59,276:INFO:                umap: 0.5.4
2023-11-17 16:24:59,276:INFO:     ydata_profiling: 4.6.1
2023-11-17 16:24:59,276:INFO:  explainerdashboard: 0.4.3
2023-11-17 16:24:59,276:INFO:             autoviz: 0.1.732
2023-11-17 16:24:59,276:INFO:           fairlearn: 0.7.0
2023-11-17 16:24:59,276:INFO:          deepchecks: Not installed
2023-11-17 16:24:59,276:INFO:             xgboost: 2.0.2
2023-11-17 16:24:59,276:INFO:            catboost: Not installed
2023-11-17 16:24:59,276:INFO:              kmodes: Not installed
2023-11-17 16:24:59,276:INFO:             mlxtend: Not installed
2023-11-17 16:24:59,276:INFO:       statsforecast: Not installed
2023-11-17 16:24:59,276:INFO:        tune_sklearn: Not installed
2023-11-17 16:24:59,276:INFO:                 ray: Not installed
2023-11-17 16:24:59,276:INFO:            hyperopt: Not installed
2023-11-17 16:24:59,276:INFO:              optuna: Not installed
2023-11-17 16:24:59,276:INFO:               skopt: Not installed
2023-11-17 16:24:59,276:INFO:              mlflow: 1.30.1
2023-11-17 16:24:59,276:INFO:              gradio: 3.50.2
2023-11-17 16:24:59,276:INFO:             fastapi: 0.104.1
2023-11-17 16:24:59,276:INFO:             uvicorn: 0.24.0.post1
2023-11-17 16:24:59,276:INFO:              m2cgen: 0.10.0
2023-11-17 16:24:59,276:INFO:           evidently: 0.2.8
2023-11-17 16:24:59,276:INFO:               fugue: Not installed
2023-11-17 16:24:59,276:INFO:           streamlit: Not installed
2023-11-17 16:24:59,276:INFO:             prophet: Not installed
2023-11-17 16:24:59,276:INFO:None
2023-11-17 16:24:59,276:INFO:Set up data.
2023-11-17 16:24:59,284:INFO:Set up folding strategy.
2023-11-17 16:24:59,285:INFO:Set up train/test split.
2023-11-17 16:24:59,287:INFO:Set up index.
2023-11-17 16:24:59,287:INFO:Assigning column types.
2023-11-17 16:24:59,289:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 16:24:59,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 16:24:59,320:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 16:24:59,340:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:24:59,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:24:59,371:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 16:24:59,372:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 16:24:59,390:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:24:59,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:24:59,392:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 16:24:59,422:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 16:24:59,441:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:24:59,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:24:59,473:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 16:24:59,492:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:24:59,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:24:59,494:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 16:24:59,542:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:24:59,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:24:59,591:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:24:59,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:24:59,594:INFO:Preparing preprocessing pipeline...
2023-11-17 16:24:59,595:INFO:Set up label encoding.
2023-11-17 16:24:59,595:INFO:Set up simple imputation.
2023-11-17 16:24:59,596:INFO:Set up column name cleaning.
2023-11-17 16:24:59,612:INFO:Finished creating preprocessing pipeline.
2023-11-17 16:24:59,616:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 16:24:59,616:INFO:Creating final display dataframe.
2023-11-17 16:24:59,671:INFO:Setup _display_container:                     Description             Value
0                    Session id                 1
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (569, 32)
6   Transformed train set shape         (398, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              2cc0
2023-11-17 16:24:59,730:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:24:59,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:24:59,780:INFO:Soft dependency imported: xgboost: 2.0.2
2023-11-17 16:24:59,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 16:24:59,783:INFO:setup() successfully completed in 0.94s...............
2023-11-17 16:25:14,557:INFO:Initializing create_model()
2023-11-17 16:25:14,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fd78e048c10>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-17 16:25:14,558:INFO:Checking exceptions
2023-11-17 16:25:14,572:INFO:Importing libraries
2023-11-17 16:25:14,572:INFO:Copying training dataset
2023-11-17 16:25:14,575:INFO:Defining folds
2023-11-17 16:25:14,576:INFO:Declaring metric variables
2023-11-17 16:25:14,578:INFO:Importing untrained model
2023-11-17 16:25:14,581:INFO:Extra Trees Classifier Imported successfully
2023-11-17 16:25:14,585:INFO:Starting cross validation
2023-11-17 16:25:14,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 16:25:15,885:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:15,889:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:15,892:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:15,928:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:15,930:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:15,933:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:15,994:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:15,996:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:15,998:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,011:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,013:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,015:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,048:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,050:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,052:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,056:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,058:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,059:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,257:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,258:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,259:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,260:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,261:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,263:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,276:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,279:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,282:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,292:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,294:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,296:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-17 16:25:16,304:INFO:Calculating mean and std
2023-11-17 16:25:16,306:INFO:Creating metrics dataframe
2023-11-17 16:25:16,312:INFO:Finalizing model
2023-11-17 16:25:16,411:INFO:Uploading results into container
2023-11-17 16:25:16,411:INFO:Uploading model into container now
2023-11-17 16:25:16,417:INFO:_master_model_container: 1
2023-11-17 16:25:16,417:INFO:_display_container: 2
2023-11-17 16:25:16,418:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-11-17 16:25:16,418:INFO:create_model() successfully completed......................................
2023-11-17 16:25:48,410:INFO:Soft dependency imported: gradio: 3.50.2
2023-11-17 16:25:48,416:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:5447: GradioDeprecationWarning: Usage of gradio.inputs is deprecated, and will not be supported in the future, please import your component from gradio.components
  all_inputs.append(gr.inputs.Textbox(label=i))

2023-11-17 16:25:48,417:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:5447: GradioDeprecationWarning: `optional` parameter is deprecated, and it has no effect
  all_inputs.append(gr.inputs.Textbox(label=i))

2023-11-17 16:25:48,417:WARNING:/home/amaldonado/miniconda3/envs/pycaret-env/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:5447: GradioDeprecationWarning: `numeric` parameter is deprecated, and it has no effect
  all_inputs.append(gr.inputs.Textbox(label=i))

2023-11-17 16:36:05,398:INFO:Soft dependency imported: fastapi: 0.104.1
2023-11-17 16:36:05,398:INFO:Soft dependency imported: uvicorn: 0.24.0.post1
2023-11-17 16:36:05,398:INFO:Soft dependency imported: pydantic: 1.10.13
2023-11-17 16:36:05,403:INFO:Initializing save_model()
2023-11-17 16:36:05,403:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False), model_name=ml_api, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave poin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-17 16:36:05,403:INFO:Adding model into prep_pipe
2023-11-17 16:36:05,439:INFO:ml_api.pkl saved in current working directory
2023-11-17 16:36:05,444:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mean',
                                             'concavity_mean',
                                             'concave points_mean',
                                             's...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=1,
                                      verbose=0, warm_start=False))],
         verbose=False)
2023-11-17 16:36:05,444:INFO:save_model() successfully completed......................................
